nohup: ignoring input
WARNING:root:libtpu.so and TPU device found. Setting PJRT_DEVICE=TPU.
INFO 01-24 21:45:17 api_server.py:773] vLLM API server version 0.1.dev4057+g0a7178e.d20250124
INFO 01-24 21:45:17 api_server.py:774] args: Namespace(subparser='serve', model_tag='meta-llama/Meta-Llama-3.1-8B', config='', host=None, port=8000, uvicorn_log_level='info', allow_credentials=False, allowed_origins=['*'], allowed_methods=['*'], allowed_headers=['*'], api_key=None, lora_modules=None, prompt_adapters=None, chat_template=None, chat_template_content_format='auto', response_role='assistant', ssl_keyfile=None, ssl_certfile=None, ssl_ca_certs=None, ssl_cert_reqs=0, root_path=None, middleware=[], return_tokens_as_token_ids=False, disable_frontend_multiprocessing=False, enable_request_id_headers=False, enable_auto_tool_choice=False, tool_call_parser=None, tool_parser_plugin='', model='meta-llama/Meta-Llama-3.1-8B', task='auto', tokenizer=None, skip_tokenizer_init=False, revision=None, code_revision=None, tokenizer_revision=None, tokenizer_mode='auto', trust_remote_code=False, allowed_local_media_path=None, download_dir='/dev/shm', load_format='auto', config_format=<ConfigFormat.AUTO: 'auto'>, dtype='bfloat16', kv_cache_dtype='auto', quantization_param_path=None, max_model_len=256, guided_decoding_backend='xgrammar', logits_processor_pattern=None, distributed_executor_backend=None, worker_use_ray=False, pipeline_parallel_size=1, tensor_parallel_size=1, max_parallel_loading_workers=None, ray_workers_use_nsight=False, block_size=None, enable_prefix_caching=None, disable_sliding_window=False, use_v2_block_manager=True, num_lookahead_slots=0, seed=0, swap_space=16.0, cpu_offload_gb=0, gpu_memory_utilization=0.9, num_gpu_blocks_override=None, max_num_batched_tokens=None, max_num_seqs=None, max_logprobs=20, disable_log_stats=False, quantization=None, rope_scaling=None, rope_theta=None, hf_overrides=None, enforce_eager=False, max_seq_len_to_capture=8192, disable_custom_all_reduce=False, tokenizer_pool_size=0, tokenizer_pool_type='ray', tokenizer_pool_extra_config=None, limit_mm_per_prompt=None, mm_processor_kwargs=None, disable_mm_preprocessor_cache=False, enable_lora=False, enable_lora_bias=False, max_loras=1, max_lora_rank=16, lora_extra_vocab_size=256, lora_dtype='auto', long_lora_scaling_factors=None, max_cpu_loras=None, fully_sharded_loras=False, enable_prompt_adapter=False, max_prompt_adapters=1, max_prompt_adapter_token=0, device='auto', num_scheduler_steps=4, multi_step_stream_outputs=True, scheduler_delay_factor=0.0, enable_chunked_prefill=None, speculative_model=None, speculative_model_quantization=None, num_speculative_tokens=None, speculative_disable_mqa_scorer=False, speculative_draft_tensor_parallel_size=None, speculative_max_model_len=None, speculative_disable_by_batch_size=None, ngram_prompt_lookup_max=None, ngram_prompt_lookup_min=None, spec_decoding_acceptance_method='rejection_sampler', typical_acceptance_sampler_posterior_threshold=None, typical_acceptance_sampler_posterior_alpha=None, disable_logprobs_during_spec_decoding=None, model_loader_extra_config=None, ignore_patterns=[], preemption_mode=None, served_model_name=None, qlora_adapter_name_or_path=None, otlp_traces_endpoint=None, collect_detailed_traces=None, disable_async_output_proc=False, scheduling_policy='fcfs', override_neuron_config=None, override_pooler_config=None, compilation_config=None, kv_transfer_config=None, worker_cls='auto', generation_config=None, disable_log_requests=True, max_log_len=None, disable_fastapi_docs=False, enable_prompt_tokens_details=False, dispatch_function=<function serve at 0x7088c28e7370>)
hosseins: api_server.py run_server
hosseins: api_server.py build_async_engine_client() args=Namespace(subparser='serve', model_tag='meta-llama/Meta-Llama-3.1-8B', config='', host=None, port=8000, uvicorn_log_level='info', allow_credentials=False, allowed_origins=['*'], allowed_methods=['*'], allowed_headers=['*'], api_key=None, lora_modules=None, prompt_adapters=None, chat_template=None, chat_template_content_format='auto', response_role='assistant', ssl_keyfile=None, ssl_certfile=None, ssl_ca_certs=None, ssl_cert_reqs=0, root_path=None, middleware=[], return_tokens_as_token_ids=False, disable_frontend_multiprocessing=False, enable_request_id_headers=False, enable_auto_tool_choice=False, tool_call_parser=None, tool_parser_plugin='', model='meta-llama/Meta-Llama-3.1-8B', task='auto', tokenizer=None, skip_tokenizer_init=False, revision=None, code_revision=None, tokenizer_revision=None, tokenizer_mode='auto', trust_remote_code=False, allowed_local_media_path=None, download_dir='/dev/shm', load_format='auto', config_format=<ConfigFormat.AUTO: 'auto'>, dtype='bfloat16', kv_cache_dtype='auto', quantization_param_path=None, max_model_len=256, guided_decoding_backend='xgrammar', logits_processor_pattern=None, distributed_executor_backend=None, worker_use_ray=False, pipeline_parallel_size=1, tensor_parallel_size=1, max_parallel_loading_workers=None, ray_workers_use_nsight=False, block_size=None, enable_prefix_caching=None, disable_sliding_window=False, use_v2_block_manager=True, num_lookahead_slots=0, seed=0, swap_space=16.0, cpu_offload_gb=0, gpu_memory_utilization=0.9, num_gpu_blocks_override=None, max_num_batched_tokens=None, max_num_seqs=None, max_logprobs=20, disable_log_stats=False, quantization=None, rope_scaling=None, rope_theta=None, hf_overrides=None, enforce_eager=False, max_seq_len_to_capture=8192, disable_custom_all_reduce=False, tokenizer_pool_size=0, tokenizer_pool_type='ray', tokenizer_pool_extra_config=None, limit_mm_per_prompt=None, mm_processor_kwargs=None, disable_mm_preprocessor_cache=False, enable_lora=False, enable_lora_bias=False, max_loras=1, max_lora_rank=16, lora_extra_vocab_size=256, lora_dtype='auto', long_lora_scaling_factors=None, max_cpu_loras=None, fully_sharded_loras=False, enable_prompt_adapter=False, max_prompt_adapters=1, max_prompt_adapter_token=0, device='auto', num_scheduler_steps=4, multi_step_stream_outputs=True, scheduler_delay_factor=0.0, enable_chunked_prefill=None, speculative_model=None, speculative_model_quantization=None, num_speculative_tokens=None, speculative_disable_mqa_scorer=False, speculative_draft_tensor_parallel_size=None, speculative_max_model_len=None, speculative_disable_by_batch_size=None, ngram_prompt_lookup_max=None, ngram_prompt_lookup_min=None, spec_decoding_acceptance_method='rejection_sampler', typical_acceptance_sampler_posterior_threshold=None, typical_acceptance_sampler_posterior_alpha=None, disable_logprobs_during_spec_decoding=None, model_loader_extra_config=None, ignore_patterns=[], preemption_mode=None, served_model_name=None, qlora_adapter_name_or_path=None, otlp_traces_endpoint=None, collect_detailed_traces=None, disable_async_output_proc=False, scheduling_policy='fcfs', override_neuron_config=None, override_pooler_config=None, compilation_config=None, kv_transfer_config=None, worker_cls='auto', generation_config=None, disable_log_requests=True, max_log_len=None, disable_fastapi_docs=False, enable_prompt_tokens_details=False, dispatch_function=<function serve at 0x7088c28e7370>)
INFO 01-24 21:45:17 __init__.py:179] Automatically detected platform tpu.
hosseins: api_server.py build_async_engine_client_from_engine_args() engine_args=AsyncEngineArgs(model='meta-llama/Meta-Llama-3.1-8B', served_model_name=None, tokenizer='meta-llama/Meta-Llama-3.1-8B', task='auto', skip_tokenizer_init=False, tokenizer_mode='auto', trust_remote_code=False, allowed_local_media_path=None, download_dir='/dev/shm', load_format='auto', config_format=<ConfigFormat.AUTO: 'auto'>, dtype='bfloat16', kv_cache_dtype='auto', quantization_param_path=None, seed=0, max_model_len=256, worker_use_ray=False, distributed_executor_backend=None, pipeline_parallel_size=1, tensor_parallel_size=1, max_parallel_loading_workers=None, block_size=None, enable_prefix_caching=False, disable_sliding_window=False, use_v2_block_manager=True, swap_space=16.0, cpu_offload_gb=0, gpu_memory_utilization=0.9, max_num_batched_tokens=None, max_num_seqs=256, max_logprobs=20, disable_log_stats=False, revision=None, code_revision=None, rope_scaling=None, rope_theta=None, hf_overrides=None, tokenizer_revision=None, quantization=None, enforce_eager=False, max_seq_len_to_capture=8192, disable_custom_all_reduce=False, tokenizer_pool_size=0, tokenizer_pool_type='ray', tokenizer_pool_extra_config=None, limit_mm_per_prompt=None, mm_processor_kwargs=None, disable_mm_preprocessor_cache=False, enable_lora=False, enable_lora_bias=False, max_loras=1, max_lora_rank=16, enable_prompt_adapter=False, max_prompt_adapters=1, max_prompt_adapter_token=0, fully_sharded_loras=False, lora_extra_vocab_size=256, long_lora_scaling_factors=None, lora_dtype='auto', max_cpu_loras=None, device='auto', num_scheduler_steps=4, multi_step_stream_outputs=True, ray_workers_use_nsight=False, num_gpu_blocks_override=None, num_lookahead_slots=0, model_loader_extra_config=None, ignore_patterns=[], preemption_mode=None, scheduler_delay_factor=0.0, enable_chunked_prefill=None, guided_decoding_backend='xgrammar', logits_processor_pattern=None, speculative_model=None, speculative_model_quantization=None, speculative_draft_tensor_parallel_size=None, num_speculative_tokens=None, speculative_disable_mqa_scorer=False, speculative_max_model_len=None, speculative_disable_by_batch_size=None, ngram_prompt_lookup_max=None, ngram_prompt_lookup_min=None, spec_decoding_acceptance_method='rejection_sampler', typical_acceptance_sampler_posterior_threshold=None, typical_acceptance_sampler_posterior_alpha=None, qlora_adapter_name_or_path=None, disable_logprobs_during_spec_decoding=None, otlp_traces_endpoint=None, collect_detailed_traces=None, disable_async_output_proc=False, scheduling_policy='fcfs', override_neuron_config=None, override_pooler_config=None, compilation_config=None, worker_cls='auto', kv_transfer_config=None, generation_config=None, disable_log_requests=True)
hosseins: build_async_engine_client_from_engine_args() -> else if PROMETHEUS_MULTIPROC_DIR not in
INFO 01-24 21:45:17 api_server.py:199] Started engine process with PID 2471949
INFO 01-24 21:45:20 __init__.py:179] Automatically detected platform tpu.
INFO 01-24 21:45:23 config.py:517] This model supports multiple tasks: {'reward', 'score', 'classify', 'embed', 'generate'}. Defaulting to 'generate'.
INFO 01-24 21:45:26 config.py:517] This model supports multiple tasks: {'classify', 'generate', 'embed', 'score', 'reward'}. Defaulting to 'generate'.
hosseins: LLMEngine -> _get_executor_cls(): engine_config=VllmConfig(model_config=<vllm.config.ModelConfig object at 0x78f0337f09a0>, cache_config=<vllm.config.CacheConfig object at 0x78f0aafaa140>, parallel_config=ParallelConfig(pipeline_parallel_size=1, tensor_parallel_size=1, worker_use_ray=False, max_parallel_loading_workers=None, disable_custom_all_reduce=False, tokenizer_pool_config=None, ray_workers_use_nsight=False, placement_group=None, distributed_executor_backend=None, worker_cls='vllm.worker.multi_step_tpu_worker.MultiStepTPUWorker', sd_worker_cls='auto', world_size=1, rank=0), scheduler_config=SchedulerConfig(runner_type='generate', max_num_batched_tokens=2048, max_num_seqs=256, max_model_len=256, num_lookahead_slots=3, delay_factor=0.0, enable_chunked_prefill=False, is_multimodal_model=False, preemption_mode=None, num_scheduler_steps=4, multi_step_stream_outputs=True, send_delta_data=False, policy='fcfs', chunked_prefill_enabled=False), device_config=<vllm.config.DeviceConfig object at 0x78f116ddbf10>, load_config=LoadConfig(load_format=<LoadFormat.AUTO: 'auto'>, download_dir='/dev/shm', model_loader_extra_config=None, ignore_patterns=['original/**/*']), lora_config=None, speculative_config=None, decoding_config=DecodingConfig(guided_decoding_backend='xgrammar'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), prompt_adapter_config=None, quant_config=None, compilation_config={"level":2,"backend":"openxla","splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"candidate_compile_sizes":[],"compile_sizes":[],"capture_sizes":[256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"max_capture_size":256}, kv_transfer_config=None, additional_config=None, instance_id='8b76f')
hosseins: LLMEngine -> _get_executor_cls(): executor_class=<class 'vllm.executor.tpu_executor.TPUExecutor'>
hosseins: LLMEngine -> __init__() vllm_config=VllmConfig(model_config=<vllm.config.ModelConfig object at 0x78f0337f09a0>, cache_config=<vllm.config.CacheConfig object at 0x78f0aafaa140>, parallel_config=ParallelConfig(pipeline_parallel_size=1, tensor_parallel_size=1, worker_use_ray=False, max_parallel_loading_workers=None, disable_custom_all_reduce=False, tokenizer_pool_config=None, ray_workers_use_nsight=False, placement_group=None, distributed_executor_backend=None, worker_cls='vllm.worker.multi_step_tpu_worker.MultiStepTPUWorker', sd_worker_cls='auto', world_size=1, rank=0), scheduler_config=SchedulerConfig(runner_type='generate', max_num_batched_tokens=2048, max_num_seqs=256, max_model_len=256, num_lookahead_slots=3, delay_factor=0.0, enable_chunked_prefill=False, is_multimodal_model=False, preemption_mode=None, num_scheduler_steps=4, multi_step_stream_outputs=True, send_delta_data=False, policy='fcfs', chunked_prefill_enabled=False), device_config=<vllm.config.DeviceConfig object at 0x78f116ddbf10>, load_config=LoadConfig(load_format=<LoadFormat.AUTO: 'auto'>, download_dir='/dev/shm', model_loader_extra_config=None, ignore_patterns=['original/**/*']), lora_config=None, speculative_config=None, decoding_config=DecodingConfig(guided_decoding_backend='xgrammar'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), prompt_adapter_config=None, quant_config=None, compilation_config={"level":2,"backend":"openxla","splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"candidate_compile_sizes":[],"compile_sizes":[],"capture_sizes":[256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"max_capture_size":256}, kv_transfer_config=None, additional_config=None, instance_id='8b76f')
INFO 01-24 21:45:26 llm_engine.py:239] Initializing an LLM engine (v0.1.dev4057+g0a7178e.d20250124) with config: model='meta-llama/Meta-Llama-3.1-8B', speculative_config=None, tokenizer='meta-llama/Meta-Llama-3.1-8B', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=256, download_dir='/dev/shm', load_format=auto, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=None, decoding_config=DecodingConfig(guided_decoding_backend='xgrammar'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=0, served_model_name=meta-llama/Meta-Llama-3.1-8B, num_scheduler_steps=4, multi_step_stream_outputs=True, enable_prefix_caching=False, chunked_prefill_enabled=False, use_async_output_proc=True, disable_mm_preprocessor_cache=False, mm_processor_kwargs=None, pooler_config=None, compilation_config={"level":2,"backend":"openxla","splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"candidate_compile_sizes":[],"compile_sizes":[],"capture_sizes":[256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"max_capture_size":256}, use_cached_outputs=True, 
hosseins: LLMEngine -> _init_tokenizer()
hosseins: LLMEngine -> get_tokenizer_group() group_type=<class 'vllm.transformers_utils.tokenizer_group.base_tokenizer_group.BaseTokenizerGroup'>
hosseins: linear.py is called
hosseins: creating mesh
hosseins: mesh_shape: [mesh_shape=(8,)]
hosseins: TPUModelRunner -> __init__()
INFO 01-24 21:45:56 tpu.py:27] Cannot use _Backend.FLASH_ATTN backend on TPU.
INFO 01-24 21:45:56 selector.py:163] Using Pallas backend.
hosseins: parallel_state.py -> init_distributed_environment rank=0
hosseins: parallel_state.py -> init_distributed_environment distributed_init_method='tcp://10.130.0.54:34377'
hosseins: parallel_state.py -> init_distributed_environment local_rank=0
hosseins: parallel_state.py -> init_distributed_environment backend='gloo'
hosseins: parallel_state.py -> init_world_group ranks=[0]
hosseins: parallel_state.py -> init_world_group backend='gloo'
hosseins: parallel_state.py -> init_world_group local_rank=0
hosseins: GroupCoordinator __init__() group_ranks=[[0]]
hosseins: GroupCoordinator __init__() local_rank=0
hosseins: GroupCoordinator -> __init__() self.ranks=[0]
hosseins: GroupCoordinator -> __init__() self.world_size=1
hosseins: GroupCoordinator -> __init__() self.rank_in_group=0
hosseins: GroupCoordinator -> __init__() self.device_group=<torch.distributed.distributed_c10d.ProcessGroup object at 0x78f03294b5f0>
hosseins: GroupCoordinator -> __init__() self.cpu_group=<torch.distributed.distributed_c10d.ProcessGroup object at 0x78f03294b3b0>
hosseins: parallel_state.py -> ensure_model_parallel_initialized tensor_model_parallel_size=1
hosseins: parallel_state.py -> ensure_model_parallel_initialized pipeline_model_parallel_size=1
hosseins: parallel_state.py -> ensure_model_parallel_initialized backend=None
hosseins: parallel_state.py -> initialize_model_parallel tensor_model_parallel_size=1
hosseins: parallel_state.py -> initialize_model_parallel pipeline_model_parallel_size=1
hosseins: parallel_state.py -> initialize_model_parallel backend='gloo'
hosseins: parallel_state.py -> init_model_parallel_group group_ranks=[[0]]
hosseins: parallel_state.py -> init_model_parallel_group local_rank=0
hosseins: parallel_state.py -> init_model_parallel_group backend='gloo'
hosseins: parallel_state.py -> init_model_parallel_group use_custom_allreduce=None
hosseins: parallel_state.py -> init_model_parallel_group use_message_queue_broadcaster=True
hosseins: parallel_state.py -> init_model_parallel_group group_name='tp'
hosseins: GroupCoordinator __init__() group_ranks=[[0]]
hosseins: GroupCoordinator __init__() local_rank=0
hosseins: GroupCoordinator -> __init__() self.ranks=[0]
hosseins: GroupCoordinator -> __init__() self.world_size=1
hosseins: GroupCoordinator -> __init__() self.rank_in_group=0
hosseins: GroupCoordinator -> __init__() self.device_group=<torch.distributed.distributed_c10d.ProcessGroup object at 0x78f0336116b0>
hosseins: GroupCoordinator -> __init__() self.cpu_group=<torch.distributed.distributed_c10d.ProcessGroup object at 0x78f0336114f0>
hosseins: parallel_state.py -> init_model_parallel_group group_ranks=[[0]]
hosseins: parallel_state.py -> init_model_parallel_group local_rank=0
hosseins: parallel_state.py -> init_model_parallel_group backend='gloo'
hosseins: parallel_state.py -> init_model_parallel_group use_custom_allreduce=False
hosseins: parallel_state.py -> init_model_parallel_group use_message_queue_broadcaster=False
hosseins: parallel_state.py -> init_model_parallel_group group_name='pp'
hosseins: GroupCoordinator __init__() group_ranks=[[0]]
hosseins: GroupCoordinator __init__() local_rank=0
hosseins: GroupCoordinator -> __init__() self.ranks=[0]
hosseins: GroupCoordinator -> __init__() self.world_size=1
hosseins: GroupCoordinator -> __init__() self.rank_in_group=0
hosseins: GroupCoordinator -> __init__() self.device_group=<torch.distributed.distributed_c10d.ProcessGroup object at 0x78f033611a70>
hosseins: GroupCoordinator -> __init__() self.cpu_group=<torch.distributed.distributed_c10d.ProcessGroup object at 0x78f033611b70>
hosseins: TPUModelRunner -> load_model()
hosseins: DefaultModelLoader __init__()
hosseins: DefaultModelLoader load_model()
hosseins: loader.py _initialize_model()
hosseins: LlamaForCausalLM -> __init__() vllm_config=VllmConfig(model_config=<vllm.config.ModelConfig object at 0x78f0337f09a0>, cache_config=<vllm.config.CacheConfig object at 0x78f0aafaa140>, parallel_config=ParallelConfig(pipeline_parallel_size=1, tensor_parallel_size=1, worker_use_ray=False, max_parallel_loading_workers=None, disable_custom_all_reduce=False, tokenizer_pool_config=None, ray_workers_use_nsight=False, placement_group=None, distributed_executor_backend=None, worker_cls='vllm.worker.multi_step_tpu_worker.MultiStepTPUWorker', sd_worker_cls='auto', world_size=1, rank=0), scheduler_config=SchedulerConfig(runner_type='generate', max_num_batched_tokens=2048, max_num_seqs=256, max_model_len=256, num_lookahead_slots=3, delay_factor=0.0, enable_chunked_prefill=False, is_multimodal_model=False, preemption_mode=None, num_scheduler_steps=4, multi_step_stream_outputs=True, send_delta_data=False, policy='fcfs', chunked_prefill_enabled=False), device_config=<vllm.config.DeviceConfig object at 0x78f116ddbf10>, load_config=LoadConfig(load_format=<LoadFormat.AUTO: 'auto'>, download_dir='/dev/shm', model_loader_extra_config=None, ignore_patterns=['original/**/*']), lora_config=None, speculative_config=None, decoding_config=DecodingConfig(guided_decoding_backend='xgrammar'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), prompt_adapter_config=None, quant_config=None, compilation_config={"level":2,"backend":"openxla","splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"candidate_compile_sizes":[],"compile_sizes":[],"capture_sizes":[256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"max_capture_size":256}, kv_transfer_config=None, additional_config=None, instance_id='8b76f')
hosseins: LlamaForCausalLM -> _init_model - vllm_config=VllmConfig(model_config=<vllm.config.ModelConfig object at 0x78f0337f09a0>, cache_config=<vllm.config.CacheConfig object at 0x78f0aafaa140>, parallel_config=ParallelConfig(pipeline_parallel_size=1, tensor_parallel_size=1, worker_use_ray=False, max_parallel_loading_workers=None, disable_custom_all_reduce=False, tokenizer_pool_config=None, ray_workers_use_nsight=False, placement_group=None, distributed_executor_backend=None, worker_cls='vllm.worker.multi_step_tpu_worker.MultiStepTPUWorker', sd_worker_cls='auto', world_size=1, rank=0), scheduler_config=SchedulerConfig(runner_type='generate', max_num_batched_tokens=2048, max_num_seqs=256, max_model_len=256, num_lookahead_slots=3, delay_factor=0.0, enable_chunked_prefill=False, is_multimodal_model=False, preemption_mode=None, num_scheduler_steps=4, multi_step_stream_outputs=True, send_delta_data=False, policy='fcfs', chunked_prefill_enabled=False), device_config=<vllm.config.DeviceConfig object at 0x78f116ddbf10>, load_config=LoadConfig(load_format=<LoadFormat.AUTO: 'auto'>, download_dir='/dev/shm', model_loader_extra_config=None, ignore_patterns=['original/**/*']), lora_config=None, speculative_config=None, decoding_config=DecodingConfig(guided_decoding_backend='xgrammar'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), prompt_adapter_config=None, quant_config=None, compilation_config={"level":2,"backend":"openxla","splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"candidate_compile_sizes":[],"compile_sizes":[],"capture_sizes":[256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"max_capture_size":256}, kv_transfer_config=None, additional_config=None, instance_id='8b76f')
hosseins: LlamaModel -> __init__ : [vllm_config=VllmConfig(model_config=<vllm.config.ModelConfig object at 0x78f0337f09a0>, cache_config=<vllm.config.CacheConfig object at 0x78f0aafaa140>, parallel_config=ParallelConfig(pipeline_parallel_size=1, tensor_parallel_size=1, worker_use_ray=False, max_parallel_loading_workers=None, disable_custom_all_reduce=False, tokenizer_pool_config=None, ray_workers_use_nsight=False, placement_group=None, distributed_executor_backend=None, worker_cls='vllm.worker.multi_step_tpu_worker.MultiStepTPUWorker', sd_worker_cls='auto', world_size=1, rank=0), scheduler_config=SchedulerConfig(runner_type='generate', max_num_batched_tokens=2048, max_num_seqs=256, max_model_len=256, num_lookahead_slots=3, delay_factor=0.0, enable_chunked_prefill=False, is_multimodal_model=False, preemption_mode=None, num_scheduler_steps=4, multi_step_stream_outputs=True, send_delta_data=False, policy='fcfs', chunked_prefill_enabled=False), device_config=<vllm.config.DeviceConfig object at 0x78f116ddbf10>, load_config=LoadConfig(load_format=<LoadFormat.AUTO: 'auto'>, download_dir='/dev/shm', model_loader_extra_config=None, ignore_patterns=['original/**/*']), lora_config=None, speculative_config=None, decoding_config=DecodingConfig(guided_decoding_backend='xgrammar'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), prompt_adapter_config=None, quant_config=None, compilation_config={"level":2,"backend":"openxla","splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"candidate_compile_sizes":[],"compile_sizes":[],"capture_sizes":[256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"max_capture_size":256}, kv_transfer_config=None, additional_config=None, instance_id='8b76f')]
hosseins: VocabParallelEmbedding -> __init__()
hosseins: returning mesh
hosseins: VocabParallelEmbedding -> _get_indices()
hosseins: UnquantizedEmbeddingMethod -> create_weights()
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: utils.py -> make_layers() [num_hidden_layers=32]
hosseins: utils.py -> make_layers() [layer_fn=<function LlamaModel.__init__.<locals>.<lambda> at 0x78f033603400>]
hosseins: utils.py -> make_layers() [prefix='model.layers']
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=0]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=1]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=2]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=3]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=4]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=5]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=6]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=7]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=8]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=9]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=10]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=11]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=12]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=13]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=14]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=15]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=16]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=17]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=18]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=19]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=20]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=21]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=22]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=23]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=24]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=25]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=26]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=27]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=28]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=29]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=30]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: LlamaDecoderLayer -> __init__() config=LlamaConfig {
  "_name_or_path": "meta-llama/Meta-Llama-3.1-8B",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": 128001,
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.47.0",
  "use_cache": true,
  "vocab_size": 128256
}

hosseins: LlamaAttention -> __init__() : [layer_idx=31]
hosseins: QKVParallelLinear -> __init__: hidden_size=4096
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=6144]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([6144, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: Attention -> __init__()
hosseins: LlamaMLP -> __init__ : [hidden_size=4096]
hosseins: MergedColumnParallelLinear -> __init__: tp_size=1
hosseins: LinearBase -> __init__() [input_size=4096]
hosseins: returning mesh
hosseins: ColumnParallelLinear -> __init__()
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=28672]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([28672, 4096])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: RowParallelLinear -> __init__()
hosseins: LinearBase -> __init__() [input_size=14336]
hosseins: returning mesh
hosseins: UnquantizedLinearMethod -> create_weights() [output_size=4096]
hosseins: UnquantizedLinearMethod -> create_weights() [weight.shape=torch.Size([4096, 14336])] [weight.device=device(type='xla', index=0)]
hosseins: UnquantizedLinearMethod -> create_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}] [cpu_mem_util=2.8]
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: utils.py -> make_layers() [modules=ModuleList(
  (0-31): 32 x LlamaDecoderLayer(
    (self_attn): LlamaAttention(
      (qkv_proj): QKVParallelLinear(in_features=4096, output_features=6144, bias=False, tp_size=1, gather_output=False)
      (o_proj): RowParallelLinear(input_features=4096, output_features=4096, bias=False, tp_size=1, reduce_results=True)
      (rotary_emb): Llama3RotaryEmbedding(head_size=128, rotary_dim=128, max_position_embeddings=131072, base=500000.0, is_neox_style=True)
      (attn): Attention(head_size=128, num_heads=32, num_kv_heads=8, scale=0.08838834764831845, backend=PallasAttentionBackendImpl)
    )
    (mlp): LlamaMLP(
      (gate_up_proj): MergedColumnParallelLinear(in_features=4096, output_features=28672, bias=False, tp_size=1, gather_output=False)
      (down_proj): RowParallelLinear(input_features=14336, output_features=4096, bias=False, tp_size=1, reduce_results=True)
      (act_fn): SiluAndMul()
    )
    (input_layernorm): RMSNorm(hidden_size=4096, eps=1e-05)
    (post_attention_layernorm): RMSNorm(hidden_size=4096, eps=1e-05)
  )
)]
hosseins: LlamaModel -> __init__ [self.start_layer=0]
hosseins: LlamaModel -> __init__ [self.end_layer=32]
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: Attention -> extra_repr()
hosseins: ColumnParallelLinear -> extra_repr()
hosseins: RowParallelLinear -> extra_repr()
hosseins: LlamaModel -> __init__ [self.layers=ModuleList(
  (0-31): 32 x LlamaDecoderLayer(
    (self_attn): LlamaAttention(
      (qkv_proj): QKVParallelLinear(in_features=4096, output_features=6144, bias=False, tp_size=1, gather_output=False)
      (o_proj): RowParallelLinear(input_features=4096, output_features=4096, bias=False, tp_size=1, reduce_results=True)
      (rotary_emb): Llama3RotaryEmbedding(head_size=128, rotary_dim=128, max_position_embeddings=131072, base=500000.0, is_neox_style=True)
      (attn): Attention(head_size=128, num_heads=32, num_kv_heads=8, scale=0.08838834764831845, backend=PallasAttentionBackendImpl)
    )
    (mlp): LlamaMLP(
      (gate_up_proj): MergedColumnParallelLinear(in_features=4096, output_features=28672, bias=False, tp_size=1, gather_output=False)
      (down_proj): RowParallelLinear(input_features=14336, output_features=4096, bias=False, tp_size=1, reduce_results=True)
      (act_fn): SiluAndMul()
    )
    (input_layernorm): RMSNorm(hidden_size=4096, eps=1e-05)
    (post_attention_layernorm): RMSNorm(hidden_size=4096, eps=1e-05)
  )
)]
hosseins: LlamaForCausalLM -> __init__() get_pp_group().is_last_rank=True
hosseins: VocabParallelEmbedding -> __init__()
hosseins: returning mesh
hosseins: VocabParallelEmbedding -> _get_indices()
hosseins: UnquantizedEmbeddingMethod -> create_weights()
hosseins: model_executor.utils -> set_weight_attrs() [['input_dim', 'output_dim']]
hosseins: model_executor.utils -> set_weight_attrs() [['weight_loader']]
hosseins: ParallelLMHead -> __init__()
hosseins: DefaultModelLoader load_model() 1 [{'bytes_limit': 33550237696, 'peak_bytes_used': 31616}]
hosseins: DefaultModelLoader load_model() 1 [2.8]
hosseins: LlamaForCausalLM -> load_weights()
hosseins: AutoWeightsLoader -> __init__()
hosseins: AutoWeightsLoader -> load_weights()
hosseins: DefaultModelLoader _get_all_weights()
hosseins: DefaultModelLoader _get_weights_iterator()
hosseins: DefaultModelLoader _prepare_weights()
hosseins: DefaultModelLoader _maybe_download_from_modelscope()
INFO 01-24 21:45:57 weight_utils.py:256] Using model weights format ['*.safetensors']
hosseins: weight_utils.py -> safetensors_weights_iterator()

Loading safetensors checkpoint shards:   0% Completed | 0/4 [00:00<?, ?it/s]
hosseins: weight_utils.py -> safetensors_weights_iterator() [{'bytes_limit': 33550237696, 'peak_bytes_used': 31616}]
hosseins: weight_utils.py -> safetensors_weights_iterator() [2.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='lm_head.weight'
hosseins: VocabParallelEmbedding -> weight_loader()
hosseins: returning mesh
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5f8b0>
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.31.input_layernorm.weight'
hosseins: LlamaModel -> load_weights()
hosseins: LlamaModel -> load_weights() [key='embed_tokens.weight']
hosseins: LlamaModel -> load_weights() [key='embed_tokens.weight'] [params_dict[key].shape=torch.Size([128256, 4096])]
hosseins: LlamaModel -> load_weights() [key='embed_tokens.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='embed_tokens.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([128256, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=525336576] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='embed_tokens.weight'] [param_bytes=1050673152]
hosseins: LlamaModel -> load_weights() [key='layers.0.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.0.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.0.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.0.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.0.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.0.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.0.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.0.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.0.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.0.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.0.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.0.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.0.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.0.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.0.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.0.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.0.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.0.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.0.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.0.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.0.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.0.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.0.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.0.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.0.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.0.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.0.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.0.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.0.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.0.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.1.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.1.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.1.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.1.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.1.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.1.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.1.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.1.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.1.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.1.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.1.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.1.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.1.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.1.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.1.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.1.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.1.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.1.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.1.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.1.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.1.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.1.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.1.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.1.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.1.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.1.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.1.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.1.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.1.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.1.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.2.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.2.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.2.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.2.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.2.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.2.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.2.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.2.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.2.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.2.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.2.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.2.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.2.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.2.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.2.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.2.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.2.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.2.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.2.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.2.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.2.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.2.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.2.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.2.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.2.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.2.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.2.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.2.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.2.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.2.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.3.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.3.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.3.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.3.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.3.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.3.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.3.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.3.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.3.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.3.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.3.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.3.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.3.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.3.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.3.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.3.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.3.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.3.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.3.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.3.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.3.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.3.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.3.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.3.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.3.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.3.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.3.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.3.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.3.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.3.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.4.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.4.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.4.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.4.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.4.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.4.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.4.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.4.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.4.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.4.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.4.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.4.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.4.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.4.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.4.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.4.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.4.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.4.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.4.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.4.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.4.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.4.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.4.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.4.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.4.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.4.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.4.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.4.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.4.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.4.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.5.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.5.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.5.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.5.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.5.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.5.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.5.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.5.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.5.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.5.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.5.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.5.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.5.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.5.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.5.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.5.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.5.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.5.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.5.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.5.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.5.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.5.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.5.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.5.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.5.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.5.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.5.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.5.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.5.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.5.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.6.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.6.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.6.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.6.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.6.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.6.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.6.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.6.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.6.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.6.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.6.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.6.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.6.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.6.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.6.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.6.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.6.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.6.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.6.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.6.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.6.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.6.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.6.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.6.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.6.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.6.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.6.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.6.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.6.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.6.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.7.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.7.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.7.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.7.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.7.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.7.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.7.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.7.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.7.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.7.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.7.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.7.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.7.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.7.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.7.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.7.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.7.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.7.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.7.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.7.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.7.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.7.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.7.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.7.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.7.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.7.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.7.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.7.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.7.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.7.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.8.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.8.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.8.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.8.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.8.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.8.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.8.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.8.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.8.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.8.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.8.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.8.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.8.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.8.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.8.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.8.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.8.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.8.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.8.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.8.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.8.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.8.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.8.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.8.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.8.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.8.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.8.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.8.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.8.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.8.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.9.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.9.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.9.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.9.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.9.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.9.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.9.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.9.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.9.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.9.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.9.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.9.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.9.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.9.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.9.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.9.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.9.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.9.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.9.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.9.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.9.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.9.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.9.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.9.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.9.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.9.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.9.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.9.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.9.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.9.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.10.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.10.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.10.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.10.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.10.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.10.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.10.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.10.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.10.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.10.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.10.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.10.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.10.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.10.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.10.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.10.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.10.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.10.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.10.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.10.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.10.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.10.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.10.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.10.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.10.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.10.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.10.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.10.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.10.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.10.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.11.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.11.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.11.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.11.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.11.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.11.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.11.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.11.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.11.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.11.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.11.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.11.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.11.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.11.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.11.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.11.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.11.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.11.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.11.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.11.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.11.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.11.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.11.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.11.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.11.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.11.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.11.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.11.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.11.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.11.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.12.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.12.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.12.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.12.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.12.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.12.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.12.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.12.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.12.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.12.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.12.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.12.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.12.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.12.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.12.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.12.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.12.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.12.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.12.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.12.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.12.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.12.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.12.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.12.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.12.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.12.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.12.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.12.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.12.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.12.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.13.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.13.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.13.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.13.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.13.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.13.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.13.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.13.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.13.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.13.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.13.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.13.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.13.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.13.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.13.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.13.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.13.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.13.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.13.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.13.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.13.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.13.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.13.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.13.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.13.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.13.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.13.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.13.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.13.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.13.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.14.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.14.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.14.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.14.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.14.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.14.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.14.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.14.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.14.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.14.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.14.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.14.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.14.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.14.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.14.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.14.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.14.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.14.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.14.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.14.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.14.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.14.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.14.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.14.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.14.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.14.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.14.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.14.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.14.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.14.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.15.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.15.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.15.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.15.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.15.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.15.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.15.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.15.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.15.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.15.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.15.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.15.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.15.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.15.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.15.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.15.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.15.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.15.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.15.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.15.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.15.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.15.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.15.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.15.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.15.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.15.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.15.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.15.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.15.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.15.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.16.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.16.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.16.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.16.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.16.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.16.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.16.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.16.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.16.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.16.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.16.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.16.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.16.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.16.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.16.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.16.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.16.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.16.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.16.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.16.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.16.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.16.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.16.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.16.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.16.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.16.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.16.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.16.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.16.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.16.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.17.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.17.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.17.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.17.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.17.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.17.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.17.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.17.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.17.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.17.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.17.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.17.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.17.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.17.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.17.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.17.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.17.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.17.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.17.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.17.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.17.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.17.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.17.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.17.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.17.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.17.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.17.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.17.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.17.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.17.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.18.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.18.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.18.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.18.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.18.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.18.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.18.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.18.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.18.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.18.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.18.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.18.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.18.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.18.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.18.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.18.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.18.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.18.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.18.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.18.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.18.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.18.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.18.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.18.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.18.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.18.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.18.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.18.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.18.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.18.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.19.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.19.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.19.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.19.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.19.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.19.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.19.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.19.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.19.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.19.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.19.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.19.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.19.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.19.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.19.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.19.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.19.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.19.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.19.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.19.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.19.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.19.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.19.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.19.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.19.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.19.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.19.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.19.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.19.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.19.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.20.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.20.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.20.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.20.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.20.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.20.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.20.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.20.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.20.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.20.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.20.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.20.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.20.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.20.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.20.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.20.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.20.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.20.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.20.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.20.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.20.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.20.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.20.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.20.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.20.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.20.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.20.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.20.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.20.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.20.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.21.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.21.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.21.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.21.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.21.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.21.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.21.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.21.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.21.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.21.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.21.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.21.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.21.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.21.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.21.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.21.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.21.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.21.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.21.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.21.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.21.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.21.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.21.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.21.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.21.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.21.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.21.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.21.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.21.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.21.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.22.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.22.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.22.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.22.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.22.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.22.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.22.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.22.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.22.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.22.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.22.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.22.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.22.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.22.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.22.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.22.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.22.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.22.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.22.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.22.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.22.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.22.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.22.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.22.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.22.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.22.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.22.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.22.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.22.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.22.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.23.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.23.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.23.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.23.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.23.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.23.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.23.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.23.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.23.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.23.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.23.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.23.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.23.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.23.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.23.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.23.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.23.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.23.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.23.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.23.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.23.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.23.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.23.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.23.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.23.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.23.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.23.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.23.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.23.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.23.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.24.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.24.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.24.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.24.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.24.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.24.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.24.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.24.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.24.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.24.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.24.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.24.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.24.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.24.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.24.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.24.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.24.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.24.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.24.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.24.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.24.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.24.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.24.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.24.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.24.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.24.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.24.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.24.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.24.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.24.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.25.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.25.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.25.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.25.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.25.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.25.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.25.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.25.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.25.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.25.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.25.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.25.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.25.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.25.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.25.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.25.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.25.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.25.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.25.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.25.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.25.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.25.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.25.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.25.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.25.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.25.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.25.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.25.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.25.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.25.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.26.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.26.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.26.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.26.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.26.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.26.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.26.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.26.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.26.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.26.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.26.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.26.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.26.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.26.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.26.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.26.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.26.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.26.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.26.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.26.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.26.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.26.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.26.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.26.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.26.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.26.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.26.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.26.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.26.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.26.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.27.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.27.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.27.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.27.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.27.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.27.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.27.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.27.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.27.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.27.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.27.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.27.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.27.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.27.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.27.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.27.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.27.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.27.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.27.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.27.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.27.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.27.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.27.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.27.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.27.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.27.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.27.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.27.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.27.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.27.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.28.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.28.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.28.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.28.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.28.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.28.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.28.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.28.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.28.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.28.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.28.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.28.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.28.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.28.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.28.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.28.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.28.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.28.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.28.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.28.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.28.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.28.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.28.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.28.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.28.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.28.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.28.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.28.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.28.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.28.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.29.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.29.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.29.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.29.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.29.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.29.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.29.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.29.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.29.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.29.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.29.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.29.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.29.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.29.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.29.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.29.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.29.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.29.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.29.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.29.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.29.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.29.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.29.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.29.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.29.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.29.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.29.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.29.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.29.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.29.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.30.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.30.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.30.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.30.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.30.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.30.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.30.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.30.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.30.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.30.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.30.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.30.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.30.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.30.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.30.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.30.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.30.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.30.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.30.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.30.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.30.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.30.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.30.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.30.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.30.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.30.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.30.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.30.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.30.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.30.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.31.self_attn.qkv_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.31.self_attn.qkv_proj.weight'] [params_dict[key].shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.31.self_attn.qkv_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.31.self_attn.qkv_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([6144, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=25165824] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.31.self_attn.qkv_proj.weight'] [param_bytes=50331648]
hosseins: LlamaModel -> load_weights() [key='layers.31.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.31.self_attn.o_proj.weight'] [params_dict[key].shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.31.self_attn.o_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.31.self_attn.o_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.31.self_attn.o_proj.weight'] [param_bytes=33554432]
hosseins: LlamaModel -> load_weights() [key='layers.31.mlp.gate_up_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.31.mlp.gate_up_proj.weight'] [params_dict[key].shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [key='layers.31.mlp.gate_up_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.31.mlp.gate_up_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([28672, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=117440512] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.31.mlp.gate_up_proj.weight'] [param_bytes=234881024]
hosseins: LlamaModel -> load_weights() [key='layers.31.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [key='layers.31.mlp.down_proj.weight'] [params_dict[key].shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [key='layers.31.mlp.down_proj.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.31.mlp.down_proj.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.31.mlp.down_proj.weight'] [param_bytes=117440512]
hosseins: LlamaModel -> load_weights() [key='layers.31.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.31.input_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.31.input_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.31.input_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.31.input_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='layers.31.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [key='layers.31.post_attention_layernorm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='layers.31.post_attention_layernorm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='layers.31.post_attention_layernorm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='layers.31.post_attention_layernorm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [key='norm.weight']
hosseins: LlamaModel -> load_weights() [key='norm.weight'] [params_dict[key].shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [key='norm.weight'] [params_dict[key].device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [key='norm.weight'] [params_dict[key].dtype=torch.bfloat16]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() [key='norm.weight'] [param_bytes=8192]
hosseins: LlamaModel -> load_weights() [total_bytes=15009849344]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.5]
hosseins: LlamaModel -> load_weights() [name='layers.31.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.31.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 31616}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.5]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.31.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.31.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.31.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5fa30>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd2f745e0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd2f745e0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15992799744}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.31.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.31.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.31.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15992799744}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.norm.weight'
hosseins: LlamaModel -> load_weights() [name='norm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='norm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘

Loading safetensors checkpoint shards:  25% Completed | 1/4 [00:07<00:21,  7.26s/it]
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15992799744}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: weight_utils.py -> safetensors_weights_iterator() [{'bytes_limit': 33550237696, 'peak_bytes_used': 15992799744}]
hosseins: weight_utils.py -> safetensors_weights_iterator() [3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.20.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.20.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.20.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15992799744}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.20.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.20.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.20.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5fc10>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9ad40>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9ad40>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15992799744}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.20.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.20.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.20.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5e500>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5fb50>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9ac20>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9ac20>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15992799744}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.20.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.20.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.20.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15992799744}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.21.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.21.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.21.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15992799744}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.21.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.21.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.21.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5ff70>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9aef0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9aef0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15992799744}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.21.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.21.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.21.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5fa30>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5fe20>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9add0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9add0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15992799744}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.21.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.21.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.21.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5fdc0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5f1f0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9add0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9add0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.21.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.21.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.21.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.21.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.21.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.21.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5e2c0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a200>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a200>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.21.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.21.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.21.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5f5b0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a9e0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a9e0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.21.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.21.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.21.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5e200>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a200>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a200>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.21.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.21.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.21.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5e920>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a200>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a200>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.22.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.22.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.22.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.22.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.22.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.22.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5e8f0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b1c0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b1c0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.22.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.22.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.22.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5fc40>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5e8c0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b0a0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b0a0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.22.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.22.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.22.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5c6a0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5f370>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b0a0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b0a0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.22.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.22.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.22.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.22.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.22.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.22.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdffa0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a710>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a710>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.22.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.22.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.22.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5fa30>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9acb0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9acb0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.22.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.22.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.22.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf640>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a710>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a710>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.22.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.22.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.22.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5f7f0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a710>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a710>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.23.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.23.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.23.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.23.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.23.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.23.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5fa60>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b370>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b370>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.23.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.23.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.23.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf5e0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdfd30>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b250>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b250>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.23.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.23.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.23.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5f1f0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5fd90>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b250>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b250>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.23.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.23.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.23.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.23.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.23.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.23.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5f8b0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a680>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a680>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.23.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.23.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.23.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2fdffa0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9ae60>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9ae60>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.23.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.23.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.23.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5eb30>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a680>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a680>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.23.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.23.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.23.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdfd60>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a680>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a680>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.24.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.24.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.24.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.24.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.24.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.24.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5f580>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b640>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b640>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.24.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.24.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.24.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf670>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdedd0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b520>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b520>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.24.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.24.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.24.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5f580>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5fb20>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b520>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b520>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.24.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.24.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.24.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.24.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.24.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.24.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5fa60>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9ab90>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9ab90>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.24.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.24.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.24.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2ffffd0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b130>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b130>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.24.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.24.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.24.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf910>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9ab90>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9ab90>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.24.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.24.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.24.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2ffff70>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9ab90>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9ab90>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.25.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.25.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.25.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15921630720}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.25.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.25.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.25.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5f8b0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b7f0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b7f0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.25.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.25.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.25.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf8e0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fff4c0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b6d0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b6d0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.25.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.25.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.25.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5c6a0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fff580>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b6d0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b6d0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.25.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.25.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.25.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.25.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.25.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.25.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5fa00>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9ab00>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9ab00>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.25.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.25.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.25.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2fdf6a0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b2e0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b2e0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.25.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.25.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.25.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fff490>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9ab00>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9ab00>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.25.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.25.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.25.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdfa00>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9ab00>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9ab00>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.26.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.26.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.26.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.26.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.26.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.26.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2ffffd0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9bac0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9bac0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.26.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.26.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.26.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5f8b0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdfd30>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b9a0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b9a0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.26.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.26.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.26.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2ffffd0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf5b0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b9a0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b9a0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.26.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.26.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.26.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.26.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.26.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.26.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fffb80>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b010>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b010>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.26.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.26.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.26.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5e8c0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b5b0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b5b0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.26.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.26.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.26.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf640>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b010>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b010>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.26.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.26.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.26.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0b550>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b010>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b010>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.27.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.27.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.27.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.27.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.27.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.27.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2fdf670>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9bc70>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9bc70>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.27.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.27.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.27.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fff4c0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5cd60>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9bb50>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9bb50>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.27.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.27.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.27.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf8e0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5c6a0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9bb50>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9bb50>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.27.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.27.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.27.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.27.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.27.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.27.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdfa00>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9af80>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9af80>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.27.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.27.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.27.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2fffe80>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b760>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b760>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.27.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.27.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.27.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5fd90>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9af80>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9af80>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.27.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.27.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.27.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fff1f0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9af80>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9af80>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.28.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.28.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.28.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.28.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.28.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.28.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5e500>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9bf40>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9bf40>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.28.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.28.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.28.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0ae60>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fff9a0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9be20>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9be20>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.28.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.28.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.28.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fff2b0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0b520>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9be20>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9be20>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.28.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.28.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.28.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.28.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.28.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.28.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5fd90>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b490>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b490>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.28.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.28.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.28.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b0aa40>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9ba30>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9ba30>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.28.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.28.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.28.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf5b0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b490>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b490>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.28.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.28.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.28.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0aa40>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b490>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b490>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.29.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.29.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.29.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.29.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.29.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.29.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2fdf940>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd2f74160>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd2f74160>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 15261595136}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.29.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.29.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.29.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bd60>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0bb80>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd2f74040>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd2f74040>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.29.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.29.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.29.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5c6a0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf6a0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd2f74040>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd2f74040>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.29.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.29.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.29.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.29.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.29.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.29.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0ba60>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b400>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b400>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.29.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.29.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.29.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b1b610>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9bbe0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9bbe0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.29.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.29.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.29.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2ffffd0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b400>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b400>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.29.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.29.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.29.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bca0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b400>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b400>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.30.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.30.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.30.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.8]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.30.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.30.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.30.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5e8c0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d983a0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d983a0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.30.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.30.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.30.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf670>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bc10>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98670>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98670>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.30.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.30.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.30.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5f5e0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bca0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98670>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98670>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.30.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.30.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.30.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.30.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.30.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.30.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf640>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b910>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b910>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.30.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.30.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.30.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2fdf640>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9beb0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9beb0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.30.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.30.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.30.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0bfd0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b910>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b910>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.30.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.30.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.30.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdfa00>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b910>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9b910>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.31.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.31.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.31.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5f1f0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf640>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd2f744c0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd2f744c0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.31.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.31.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.31.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b940>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5e200>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd2f744c0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd2f744c0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.31.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.31.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.31.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bbb0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd2f74430>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd2f74430>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.31.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.31.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.31.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b2b7c0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd2f740d0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd2f740d0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.31.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.31.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.31.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0b520>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd2f74430>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd2f74430>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.31.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.31.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.31.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bd00>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘

Loading safetensors checkpoint shards:  50% Completed | 2/4 [00:22<00:23, 11.67s/it]
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd2f74430>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd2f74430>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=3.7]
hosseins: weight_utils.py -> safetensors_weights_iterator() [{'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: weight_utils.py -> safetensors_weights_iterator() [3.7]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.embed_tokens.weight'
hosseins: LlamaModel -> load_weights() [name='embed_tokens.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([128256, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='embed_tokens.weight'] [loaded_weight.shape=torch.Size([128256, 4096])] [param.shape=torch.Size([128256, 4096])]
hosseins: VocabParallelEmbedding -> weight_loader()
hosseins: returning mesh
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b0aa40>
hosseins: estimate_tensor_memory-> [shape=torch.Size([128256, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=525336576] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033603370>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([128256, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033603370>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.0.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.0.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.0.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14747801088}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.0.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.0.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.0.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5f3d0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f0338071c0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f0338071c0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 16555546112}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.0.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.0.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.0.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bfd0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0ad10>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033807ac0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033807ac0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 16555546112}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.0.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.0.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.0.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5c6a0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0b700>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033807ac0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033807ac0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 16555546112}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.0.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.0.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.0.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 16555546112}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.0.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.0.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.0.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bc70>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d46e60>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d46e60>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 16555546112}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.0.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.0.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.0.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b0ae60>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d477f0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d477f0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 16555546112}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.0.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.0.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.0.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5fd90>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d46e60>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d46e60>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 16555546112}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.0.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.0.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.0.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf670>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d46e60>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d46e60>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 16555546112}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.1.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.1.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.1.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 16555546112}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.1.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.1.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.1.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2ffe740>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f0338072e0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f0338072e0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 16555546112}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.1.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.1.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.1.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b7c0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0ad10>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033807010>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033807010>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 16555546112}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.1.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.1.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.1.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bc10>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0b1f0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033807010>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033807010>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 16555546112}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.1.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.1.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.1.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 16555546112}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.1.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.1.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.1.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bfd0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98040>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98040>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 16555546112}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.1.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.1.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.1.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5e500>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f03372c550>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f03372c550>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 16555546112}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.1.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.1.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.1.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf8e0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98040>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98040>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 16555546112}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.1.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.1.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.1.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b6d0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98040>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98040>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 16555546112}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.2.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.2.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.2.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 16555546112}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.2.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.2.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.2.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2fdf640>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d7feb0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d7feb0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 16555546112}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.2.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.2.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.2.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5cc10>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2a8c0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d7fd90>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d7fd90>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 16555546112}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.2.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.2.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.2.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bc70>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0aa40>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d7fd90>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d7fd90>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 16555546112}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.2.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.2.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.2.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 16555546112}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.2.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.2.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.2.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5e500>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98310>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98310>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 16555546112}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.2.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.2.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.2.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b1b130>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98430>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98430>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.2.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.2.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.2.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b910>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98310>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98310>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.2.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.2.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.2.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2bee0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98310>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98310>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.3.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.3.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.3.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.3.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.3.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.3.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2fdf640>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d47880>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d47880>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.3.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.3.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.3.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bbb0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf670>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033560430>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033560430>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.3.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.3.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.3.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b7f0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0ada0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033560430>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033560430>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.3.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.3.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.3.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.3.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.3.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.3.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bbb0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98160>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98160>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.3.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.3.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.3.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b2be20>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98280>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98280>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.3.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.3.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.3.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bb50>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98160>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98160>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.3.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.3.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.3.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5c6a0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98160>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98160>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.4.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.4.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.4.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.4.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.4.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.4.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b0ad10>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f0335355a0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f0335355a0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.4.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.4.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.4.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b7f0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf6a0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033535a20>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033535a20>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.4.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.4.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.4.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bc10>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5c6a0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033535a20>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033535a20>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.4.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.4.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.4.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.4.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.4.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.4.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0aa40>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d980d0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d980d0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.4.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.4.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.4.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5e500>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d985e0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d985e0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.4.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.4.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.4.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b880>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d980d0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d980d0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.4.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.4.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.4.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bc70>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d980d0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d980d0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.5.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.5.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.5.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.5.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.5.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.5.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2fdf6a0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d7ff40>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d7ff40>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.5.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.5.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.5.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b940>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5ed70>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98940>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98940>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.5.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.5.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.5.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5cc10>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0aa40>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98940>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98940>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.5.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.5.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.5.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.5.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.5.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.5.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1b130>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d981f0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d981f0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.5.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.5.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.5.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5cc10>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98820>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98820>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.5.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.5.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.5.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5ed70>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d981f0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d981f0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.5.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.5.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.5.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0ada0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d981f0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d981f0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.6.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.6.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.6.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.6.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.6.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.6.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5e500>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98550>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98550>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.6.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.6.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.6.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b910>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf670>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033535900>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033535900>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 14156456448}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.6.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.6.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.6.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bb50>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf6a0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033535900>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033535900>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.6.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.6.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.6.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.6.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.6.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.6.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b6d0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98790>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98790>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.6.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.6.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.6.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b1bfd0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d989d0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d989d0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.6.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.6.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.6.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0ada0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98790>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98790>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.6.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.6.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.6.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b700>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98790>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98790>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.7.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.7.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.7.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.7.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.7.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.7.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2fdf8e0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98e50>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98e50>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.7.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.7.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.7.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bbb0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0b550>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98d30>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98d30>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.7.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.7.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.7.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1b0d0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0ada0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98d30>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98d30>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.7.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.7.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.7.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.7.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.7.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.7.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b880>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98af0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98af0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.7.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.7.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.7.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b1bfd0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98c10>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98c10>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.7.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.7.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.7.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0ae60>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98af0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98af0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.7.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.7.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.7.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2ac80>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98af0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98af0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.8.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.8.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.8.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.8.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.8.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.8.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2fdf6a0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99120>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99120>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.8.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.8.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.8.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bb50>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0b520>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99000>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99000>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.8.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.8.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.8.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1b610>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0ae60>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99000>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99000>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.8.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.8.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.8.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.8.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.8.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.8.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b7c0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d47910>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d47910>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.8.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.8.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.8.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b1bfd0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d988b0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d988b0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.8.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.8.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.8.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0ada0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d47910>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d47910>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.8.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.8.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.8.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2ac50>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘

Loading safetensors checkpoint shards:  75% Completed | 3/4 [00:42<00:15, 15.55s/it]
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d47910>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d47910>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: weight_utils.py -> safetensors_weights_iterator() [{'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: weight_utils.py -> safetensors_weights_iterator() [4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.10.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.10.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.10.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.10.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.10.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.10.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b0ada0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99510>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99510>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.10.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.10.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.10.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b7f0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf5e0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d993f0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d993f0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.10.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.10.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.10.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b880>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0ada0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d993f0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d993f0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.10.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.10.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.10.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.10.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.10.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.10.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1b0d0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033807370>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033807370>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.10.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.10.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.10.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b2b700>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99090>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99090>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.10.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.10.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.10.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0ad10>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033807370>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033807370>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.10.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.10.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.10.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b910>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033807370>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78f033807370>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.11.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.11.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.11.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.11.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.11.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.11.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2fdf5e0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d997e0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d997e0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13661528576}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.11.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.11.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.11.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b850>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5f3d0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99750>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99750>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.11.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.11.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.11.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bc10>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5cc10>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99750>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99750>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.11.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.11.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.11.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.11.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.11.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.11.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1b130>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98b80>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98b80>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.11.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.11.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.11.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5ed70>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d991b0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d991b0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.11.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.11.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.11.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b7f0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98b80>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98b80>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.11.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.11.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.11.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bbb0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98b80>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98b80>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.12.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.12.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.12.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.12.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.12.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.12.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5f3d0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99ab0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99ab0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.12.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.12.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.12.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b6d0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf640>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99990>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99990>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.12.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.12.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.12.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bbb0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf640>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99990>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99990>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.12.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.12.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.12.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.12.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.12.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.12.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5c6a0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98f70>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98f70>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.12.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.12.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.12.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b1bbb0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99480>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99480>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.12.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.12.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.12.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0aa40>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98f70>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98f70>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.12.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.12.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.12.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0ba30>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98f70>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98f70>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.13.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.13.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.13.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.13.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.13.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.13.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5ff70>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99c60>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99c60>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.13.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.13.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.13.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2ac80>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0ba30>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99b40>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99b40>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.13.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.13.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.13.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0b520>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bd00>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99b40>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99b40>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.13.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.13.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.13.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.13.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.13.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.13.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2ffe740>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98dc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98dc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.13.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.13.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.13.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b0ada0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99630>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99630>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.13.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.13.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.13.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5cc10>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98dc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98dc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.13.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.13.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.13.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bcd0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98dc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98dc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.14.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.14.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.14.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.14.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.14.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.14.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b2b700>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99f30>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99f30>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.14.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.14.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.14.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1b610>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5e500>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99e10>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99e10>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.14.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.14.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.14.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0b520>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf8e0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99e10>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99e10>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.14.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.14.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.14.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.14.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.14.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.14.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b820>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99360>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99360>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.14.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.14.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.14.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b2be20>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99a20>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99a20>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.14.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.14.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.14.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0ada0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99360>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99360>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.14.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.14.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.14.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0ae60>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99360>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99360>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.15.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.15.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.15.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.15.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.15.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.15.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5ff70>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a170>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a170>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.15.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.15.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.15.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0ba30>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5c6a0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a050>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a050>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 13133046272}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.15.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.15.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.15.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bbb0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf6a0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a050>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a050>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.15.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.15.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.15.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.15.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.15.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.15.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b7c0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d992d0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d992d0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.15.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.15.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.15.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b2be20>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99cf0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99cf0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.15.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.15.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.15.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bcd0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d992d0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d992d0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.15.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.15.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.15.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bcd0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d992d0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d992d0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.16.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.16.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.16.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.16.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.16.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.16.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5cc10>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a440>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a440>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.16.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.16.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.16.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0b550>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5cc10>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a320>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a320>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.16.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.16.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.16.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2ac50>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1b610>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a320>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a320>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.16.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.16.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.16.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.16.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.16.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.16.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0b520>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99900>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99900>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.16.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.16.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.16.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b2ac80>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99ea0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99ea0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.16.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.16.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.16.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0b520>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99900>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99900>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.16.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.16.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.16.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0b520>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99900>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99900>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.17.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.17.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.17.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.17.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.17.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.17.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5ed70>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a5f0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a5f0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.17.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.17.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.17.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0ada0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5c6a0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a4d0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a4d0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.17.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.17.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.17.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bd00>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf5e0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a4d0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a4d0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.17.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.17.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.17.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.17.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.17.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.17.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b940>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99870>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99870>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.17.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.17.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.17.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b2b7c0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a0e0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a0e0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.17.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.17.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.17.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bbb0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99870>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99870>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.17.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.17.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.17.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bbb0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99870>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99870>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.18.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.18.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.18.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.18.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.18.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.18.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5e500>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a8c0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a8c0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.18.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.18.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.18.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0ba30>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5e500>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a7a0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a7a0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.18.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.18.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.18.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b910>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1b610>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a7a0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a7a0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.18.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.18.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.18.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.18.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.18.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.18.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0ad10>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99d80>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99d80>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.18.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.18.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.18.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b2b880>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a3b0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a3b0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.18.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.18.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.18.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0ad10>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99d80>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99d80>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.18.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.18.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.18.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0ad10>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99d80>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99d80>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.19.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.19.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.19.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.19.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.19.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.19.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78efd2f5f3d0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9aa70>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9aa70>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12604563968}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.19.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.19.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.19.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0b1f0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5c6a0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a950>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a950>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12076081664}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.19.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.19.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.19.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1b130>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf640>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a950>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a950>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12076081664}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.19.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.19.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.19.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12076081664}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.19.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.19.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.19.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2ac50>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12076081664}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.19.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.19.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.19.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b2b940>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a560>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a560>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12076081664}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.19.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.19.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.19.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bd00>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12076081664}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.19.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.19.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.19.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1bd00>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12076081664}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.20.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.20.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.20.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0aa40>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf670>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9ac20>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9ac20>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12076081664}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.20.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.20.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.20.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b700>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a290>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a290>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12076081664}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.20.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.20.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.20.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b1bc10>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a830>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a830>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12076081664}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.20.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.20.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.20.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5f3d0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a290>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a290>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12076081664}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.20.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.20.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.20.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2b7c0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a290>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d9a290>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12076081664}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.9.input_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.9.input_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.9.input_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12076081664}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.9.mlp.down_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.9.mlp.down_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.9.mlp.down_proj.weight'] [loaded_weight.shape=torch.Size([4096, 14336])] [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 14336])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 14336])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b0b550>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 14336])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99240>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 14336])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d99240>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12076081664}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.9.mlp.gate_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.9.mlp.gate_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.9.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=0]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf6a0>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2f5e500>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.gate_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98ee0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98ee0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12076081664}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.9.mlp.up_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.9.mlp.up_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.9.mlp.gate_up_proj.weight'] [loaded_weight.shape=torch.Size([14336, 4096])] [param.shape=torch.Size([28672, 4096])] [shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() [loaded_shard_id=1]
hosseins: MergedColumnParallelLinear -> weight_loader() [self.output_sizes=[14336, 14336]]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 before narrow [param_data.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b2ac50>
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_offset=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 1 [shard_size=14336]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.shape=torch.Size([28672, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([14336, 4096])]
hosseins: MergedColumnParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([28672, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78efd2fdf6a0>
hosseins: estimate_tensor_memory-> [shape=torch.Size([14336, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=58720256] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98ee0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([28672, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98ee0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12076081664}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.9.post_attention_layernorm.weight'
hosseins: LlamaModel -> load_weights() [name='layers.9.post_attention_layernorm.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.9.post_attention_layernorm.weight'] [loaded_weight.shape=torch.Size([4096])] [param.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader()
hosseins: weight_utils.py -> default_weight_loader() [param.data.shape=torch.Size([4096])]
hosseins: weight_utils.py -> default_weight_loader() [param.data.device=device(type='xla', index=0)]
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4096] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function default_weight_loader at 0x78f032979fc0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12076081664}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.9.self_attn.k_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.9.self_attn.k_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.9.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='k']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='k']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0aa40>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.k_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98a60>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98a60>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12076081664}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.9.self_attn.o_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.9.self_attn.o_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: weight_utils.py -> maybe_remap_kv_scale_name()
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.9.self_attn.o_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader()
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: RowParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: RowParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 1 [input_dim=1]
hosseins: RowParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: RowParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: RowParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: RowParallelLinear -> weight_loader() 2 [param.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: RowParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([4096, 4096])]
hosseins: after sharding param
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
<rich.table.Table object at 0x78ef95b2ac80>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - else:
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│       │       │       │       │       │       │       │       │
│ TPU 0 │ TPU 1 │ TPU 2 │ TPU 3 │ TPU 4 │ TPU 5 │ TPU 6 │ TPU 7 │
│       │       │       │       │       │       │       │       │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
hosseins: LlamaModel -> load_weights() [weight_name='.up_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98ca0>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=True]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.gate_up_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98ca0>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12076081664}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.9.self_attn.q_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.9.self_attn.q_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.9.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([4096, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='q']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='q']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=4096]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([4096, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b1b610>
hosseins: estimate_tensor_memory-> [shape=torch.Size([4096, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=16777216] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘
hosseins: LlamaModel -> load_weights() [weight_name='.q_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98a60>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98a60>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12076081664}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> maybe_remap_mistral name='model.layers.9.self_attn.v_proj.weight'
hosseins: LlamaModel -> load_weights() [name='layers.9.self_attn.v_proj.weight']
hosseins: LlamaModel -> load_weights() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() X calling weight_loader() for [name='layers.9.self_attn.qkv_proj.weight'] [loaded_weight.shape=torch.Size([1024, 4096])] [param.shape=torch.Size([6144, 4096])] [shard_id='v']
hosseins: QKVParallelLinear -> weight_loader()
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight=False]
hosseins: QKVParallelLinear -> weight_loader() [is_gguf_weight_type=False]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.device=device(type='cpu')]
hosseins: QKVParallelLinear -> weight_loader() [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() [loaded_shard_id='v']
hosseins: QKVParallelLinear -> weight_loader() [self.output_sizes=[4096, 1024, 1024]]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [param.data.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [is_metadata=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [needs_scalar_to_array=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [packed_dim=None]
hosseins: QKVParallelLinear -> weight_loader() 1 [use_bitsandbytes_4bit=False]
hosseins: QKVParallelLinear -> weight_loader() 1 [output_dim=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [start_idx=0]
hosseins: QKVParallelLinear -> weight_loader() 1 [shard_size=1024]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.device=device(type='xla', index=0)]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.shape=torch.Size([6144, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [loaded_weight.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param_data.shape=torch.Size([1024, 4096])]
hosseins: QKVParallelLinear -> weight_loader() 2 [param.data.shape=torch.Size([6144, 4096])]
hosseins: after sharding param
┌───────┐
│       │
│ TPU 0 │
│       │
├───────┤
│       │
│ TPU 1 │
│       │
├───────┤
│       │
│ TPU 2 │
│       │
├───────┤
│       │
│ TPU 3 │
│       │
├───────┤
│       │
│ TPU 4 │
│       │
├───────┤
│       │
│ TPU 5 │
│       │
├───────┤
│       │
│ TPU 6 │
│       │
├───────┤
│       │
│ TPU 7 │
│       │
└───────┘
<rich.table.Table object at 0x78ef95b0ae60>
hosseins: estimate_tensor_memory-> [shape=torch.Size([1024, 4096])] - dtype='uint16'
hosseins: estimate_tensor_memory-> [num_elements=4194304] - dtype_size=2
hosseins: LlamaModel -> load_weights() - param_name, weight_name, shard_id in stacked_params_mapping
┌──────────────────────────────┐
│                              │
│ TPU [0, 1, 2, 3, 4, 5, 6, 7] │
│                              │
└──────────────────────────────┘

Loading safetensors checkpoint shards: 100% Completed | 4/4 [00:56<00:00, 15.18s/it]

Loading safetensors checkpoint shards: 100% Completed | 4/4 [00:56<00:00, 14.20s/it]

hosseins: LlamaModel -> load_weights() [weight_name='.v_proj']
hosseins: LlamaModel -> load_weights() [type(param)=<class 'torch.nn.parameter.Parameter'>]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98a60>]
hosseins: LlamaModel -> load_weights() [loaded_weight.shape==param.shape=False]
hosseins: LlamaModel -> load_weights() [loaded_weight.device=device(type='cpu')]
hosseins: LlamaModel -> load_weights() [type(loaded_weight)=<class 'torch.Tensor'>]
hosseins: LlamaModel -> load_weights() [param_name='.qkv_proj']
hosseins: LlamaModel -> load_weights() [param.shape=torch.Size([6144, 4096])]
hosseins: LlamaModel -> load_weights() [param.device=device(type='xla', index=0)]
hosseins: LlamaModel -> load_weights() [weight_loader=<function _make_synced_weight_loader.<locals>._synced_weight_loader at 0x78efd4d98a60>]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12076081664}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: LlamaModel -> load_weights() [len(loaded_params)=194]
hosseins: LlamaModel -> load_weights() [loaded_params={'layers.6.post_attention_layernorm.weight', 'layers.29.post_attention_layernorm.weight', 'layers.30.input_layernorm.weight', 'layers.7.mlp.down_proj.weight', 'layers.12.mlp.gate_up_proj.weight', 'layers.14.mlp.gate_up_proj.weight', 'layers.29.mlp.down_proj.weight', 'layers.27.self_attn.o_proj.weight', 'layers.20.self_attn.o_proj.weight', 'layers.3.self_attn.qkv_proj.weight', 'layers.7.input_layernorm.weight', 'layers.14.self_attn.qkv_proj.weight', 'layers.9.post_attention_layernorm.weight', 'layers.15.self_attn.qkv_proj.weight', 'layers.25.self_attn.qkv_proj.weight', 'layers.11.mlp.down_proj.weight', 'layers.12.self_attn.o_proj.weight', 'layers.3.mlp.gate_up_proj.weight', 'layers.4.self_attn.qkv_proj.weight', 'layers.24.self_attn.qkv_proj.weight', 'layers.31.self_attn.qkv_proj.weight', 'layers.5.self_attn.o_proj.weight', 'layers.7.mlp.gate_up_proj.weight', 'layers.20.mlp.down_proj.weight', 'layers.11.self_attn.o_proj.weight', 'layers.9.mlp.gate_up_proj.weight', 'layers.1.mlp.down_proj.weight', 'layers.10.mlp.down_proj.weight', 'layers.10.post_attention_layernorm.weight', 'norm.weight', 'layers.12.input_layernorm.weight', 'layers.6.self_attn.qkv_proj.weight', 'layers.26.self_attn.qkv_proj.weight', 'layers.23.mlp.down_proj.weight', 'layers.28.self_attn.qkv_proj.weight', 'layers.4.post_attention_layernorm.weight', 'layers.17.self_attn.o_proj.weight', 'layers.4.mlp.gate_up_proj.weight', 'layers.26.input_layernorm.weight', 'layers.5.input_layernorm.weight', 'layers.9.input_layernorm.weight', 'layers.0.input_layernorm.weight', 'layers.15.mlp.gate_up_proj.weight', 'layers.31.mlp.gate_up_proj.weight', 'layers.4.input_layernorm.weight', 'layers.19.mlp.gate_up_proj.weight', 'layers.7.self_attn.qkv_proj.weight', 'layers.18.post_attention_layernorm.weight', 'layers.23.self_attn.o_proj.weight', 'layers.3.input_layernorm.weight', 'layers.27.post_attention_layernorm.weight', 'layers.1.post_attention_layernorm.weight', 'layers.8.mlp.down_proj.weight', 'layers.17.mlp.down_proj.weight', 'layers.29.self_attn.qkv_proj.weight', 'layers.5.mlp.gate_up_proj.weight', 'layers.30.mlp.gate_up_proj.weight', 'layers.22.self_attn.o_proj.weight', 'layers.12.self_attn.qkv_proj.weight', 'layers.26.self_attn.o_proj.weight', 'layers.9.self_attn.o_proj.weight', 'layers.8.mlp.gate_up_proj.weight', 'layers.16.self_attn.o_proj.weight', 'layers.24.self_attn.o_proj.weight', 'layers.13.mlp.down_proj.weight', 'layers.22.input_layernorm.weight', 'layers.29.input_layernorm.weight', 'layers.25.self_attn.o_proj.weight', 'layers.25.mlp.down_proj.weight', 'layers.11.post_attention_layernorm.weight', 'layers.8.post_attention_layernorm.weight', 'layers.11.input_layernorm.weight', 'layers.15.mlp.down_proj.weight', 'layers.7.self_attn.o_proj.weight', 'layers.18.self_attn.o_proj.weight', 'layers.8.self_attn.qkv_proj.weight', 'layers.6.self_attn.o_proj.weight', 'layers.19.mlp.down_proj.weight', 'layers.7.post_attention_layernorm.weight', 'layers.19.self_attn.qkv_proj.weight', 'layers.28.mlp.gate_up_proj.weight', 'embed_tokens.weight', 'layers.23.self_attn.qkv_proj.weight', 'layers.18.input_layernorm.weight', 'layers.21.mlp.down_proj.weight', 'layers.22.self_attn.qkv_proj.weight', 'layers.25.post_attention_layernorm.weight', 'layers.11.self_attn.qkv_proj.weight', 'layers.15.input_layernorm.weight', 'layers.16.input_layernorm.weight', 'layers.3.post_attention_layernorm.weight', 'layers.13.input_layernorm.weight', 'layers.17.self_attn.qkv_proj.weight', 'layers.24.mlp.down_proj.weight', 'layers.14.post_attention_layernorm.weight', 'layers.24.post_attention_layernorm.weight', 'layers.23.mlp.gate_up_proj.weight', 'layers.27.self_attn.qkv_proj.weight', 'layers.0.self_attn.o_proj.weight', 'layers.0.post_attention_layernorm.weight', 'layers.30.mlp.down_proj.weight', 'layers.13.mlp.gate_up_proj.weight', 'layers.24.mlp.gate_up_proj.weight', 'layers.30.self_attn.o_proj.weight', 'layers.20.mlp.gate_up_proj.weight', 'layers.26.post_attention_layernorm.weight', 'layers.2.post_attention_layernorm.weight', 'layers.5.self_attn.qkv_proj.weight', 'layers.28.post_attention_layernorm.weight', 'layers.10.self_attn.qkv_proj.weight', 'layers.3.mlp.down_proj.weight', 'layers.13.post_attention_layernorm.weight', 'layers.15.post_attention_layernorm.weight', 'layers.21.self_attn.qkv_proj.weight', 'layers.28.self_attn.o_proj.weight', 'layers.5.post_attention_layernorm.weight', 'layers.15.self_attn.o_proj.weight', 'layers.18.self_attn.qkv_proj.weight', 'layers.27.mlp.gate_up_proj.weight', 'layers.2.self_attn.qkv_proj.weight', 'layers.9.mlp.down_proj.weight', 'layers.22.mlp.gate_up_proj.weight', 'layers.25.input_layernorm.weight', 'layers.21.input_layernorm.weight', 'layers.16.mlp.down_proj.weight', 'layers.8.input_layernorm.weight', 'layers.12.post_attention_layernorm.weight', 'layers.20.post_attention_layernorm.weight', 'layers.29.self_attn.o_proj.weight', 'layers.30.self_attn.qkv_proj.weight', 'layers.1.input_layernorm.weight', 'layers.16.mlp.gate_up_proj.weight', 'layers.31.post_attention_layernorm.weight', 'layers.10.input_layernorm.weight', 'layers.26.mlp.down_proj.weight', 'layers.6.mlp.gate_up_proj.weight', 'layers.20.self_attn.qkv_proj.weight', 'layers.31.self_attn.o_proj.weight', 'layers.20.input_layernorm.weight', 'layers.17.input_layernorm.weight', 'layers.6.input_layernorm.weight', 'layers.12.mlp.down_proj.weight', 'layers.2.self_attn.o_proj.weight', 'layers.10.mlp.gate_up_proj.weight', 'layers.19.input_layernorm.weight', 'layers.30.post_attention_layernorm.weight', 'layers.27.mlp.down_proj.weight', 'layers.8.self_attn.o_proj.weight', 'layers.14.self_attn.o_proj.weight', 'layers.1.self_attn.o_proj.weight', 'layers.14.input_layernorm.weight', 'layers.31.input_layernorm.weight', 'layers.29.mlp.gate_up_proj.weight', 'layers.0.mlp.gate_up_proj.weight', 'layers.18.mlp.down_proj.weight', 'layers.17.post_attention_layernorm.weight', 'layers.13.self_attn.qkv_proj.weight', 'layers.3.self_attn.o_proj.weight', 'layers.11.mlp.gate_up_proj.weight', 'layers.2.input_layernorm.weight', 'layers.1.mlp.gate_up_proj.weight', 'layers.27.input_layernorm.weight', 'layers.28.input_layernorm.weight', 'layers.6.mlp.down_proj.weight', 'layers.25.mlp.gate_up_proj.weight', 'layers.5.mlp.down_proj.weight', 'layers.2.mlp.down_proj.weight', 'layers.14.mlp.down_proj.weight', 'layers.22.post_attention_layernorm.weight', 'layers.21.post_attention_layernorm.weight', 'layers.23.post_attention_layernorm.weight', 'layers.10.self_attn.o_proj.weight', 'layers.4.self_attn.o_proj.weight', 'layers.16.post_attention_layernorm.weight', 'layers.24.input_layernorm.weight', 'layers.0.mlp.down_proj.weight', 'layers.17.mlp.gate_up_proj.weight', 'layers.13.self_attn.o_proj.weight', 'layers.18.mlp.gate_up_proj.weight', 'layers.19.post_attention_layernorm.weight', 'layers.0.self_attn.qkv_proj.weight', 'layers.26.mlp.gate_up_proj.weight', 'layers.2.mlp.gate_up_proj.weight', 'layers.4.mlp.down_proj.weight', 'layers.16.self_attn.qkv_proj.weight', 'layers.9.self_attn.qkv_proj.weight', 'layers.19.self_attn.o_proj.weight', 'layers.28.mlp.down_proj.weight', 'layers.1.self_attn.qkv_proj.weight', 'layers.21.self_attn.o_proj.weight', 'layers.23.input_layernorm.weight', 'layers.21.mlp.gate_up_proj.weight', 'layers.22.mlp.down_proj.weight', 'layers.31.mlp.down_proj.weight'}]
hosseins: LlamaModel -> load_weights() [len(processed_params)=194]
hosseins: LlamaModel -> load_weights() [processed_params={'layers.6.post_attention_layernorm.weight', 'layers.29.post_attention_layernorm.weight', 'layers.30.input_layernorm.weight', 'layers.7.mlp.down_proj.weight', 'layers.12.mlp.gate_up_proj.weight', 'layers.14.mlp.gate_up_proj.weight', 'layers.29.mlp.down_proj.weight', 'layers.27.self_attn.o_proj.weight', 'layers.20.self_attn.o_proj.weight', 'layers.3.self_attn.qkv_proj.weight', 'layers.7.input_layernorm.weight', 'layers.14.self_attn.qkv_proj.weight', 'layers.9.post_attention_layernorm.weight', 'layers.15.self_attn.qkv_proj.weight', 'layers.25.self_attn.qkv_proj.weight', 'layers.11.mlp.down_proj.weight', 'layers.12.self_attn.o_proj.weight', 'layers.3.mlp.gate_up_proj.weight', 'layers.4.self_attn.qkv_proj.weight', 'layers.24.self_attn.qkv_proj.weight', 'layers.31.self_attn.qkv_proj.weight', 'layers.5.self_attn.o_proj.weight', 'layers.7.mlp.gate_up_proj.weight', 'layers.20.mlp.down_proj.weight', 'layers.11.self_attn.o_proj.weight', 'layers.9.mlp.gate_up_proj.weight', 'layers.1.mlp.down_proj.weight', 'layers.10.mlp.down_proj.weight', 'layers.10.post_attention_layernorm.weight', 'norm.weight', 'layers.12.input_layernorm.weight', 'layers.6.self_attn.qkv_proj.weight', 'layers.26.self_attn.qkv_proj.weight', 'layers.23.mlp.down_proj.weight', 'layers.28.self_attn.qkv_proj.weight', 'layers.4.post_attention_layernorm.weight', 'layers.17.self_attn.o_proj.weight', 'layers.4.mlp.gate_up_proj.weight', 'layers.26.input_layernorm.weight', 'layers.5.input_layernorm.weight', 'layers.9.input_layernorm.weight', 'layers.0.input_layernorm.weight', 'layers.15.mlp.gate_up_proj.weight', 'layers.31.mlp.gate_up_proj.weight', 'layers.4.input_layernorm.weight', 'layers.19.mlp.gate_up_proj.weight', 'layers.7.self_attn.qkv_proj.weight', 'layers.18.post_attention_layernorm.weight', 'layers.23.self_attn.o_proj.weight', 'layers.3.input_layernorm.weight', 'layers.27.post_attention_layernorm.weight', 'layers.1.post_attention_layernorm.weight', 'layers.8.mlp.down_proj.weight', 'layers.17.mlp.down_proj.weight', 'layers.29.self_attn.qkv_proj.weight', 'layers.5.mlp.gate_up_proj.weight', 'layers.30.mlp.gate_up_proj.weight', 'layers.22.self_attn.o_proj.weight', 'layers.12.self_attn.qkv_proj.weight', 'layers.26.self_attn.o_proj.weight', 'layers.9.self_attn.o_proj.weight', 'layers.8.mlp.gate_up_proj.weight', 'layers.16.self_attn.o_proj.weight', 'layers.24.self_attn.o_proj.weight', 'layers.13.mlp.down_proj.weight', 'layers.22.input_layernorm.weight', 'layers.29.input_layernorm.weight', 'layers.25.self_attn.o_proj.weight', 'layers.25.mlp.down_proj.weight', 'layers.11.post_attention_layernorm.weight', 'layers.8.post_attention_layernorm.weight', 'layers.11.input_layernorm.weight', 'layers.15.mlp.down_proj.weight', 'layers.7.self_attn.o_proj.weight', 'layers.18.self_attn.o_proj.weight', 'layers.8.self_attn.qkv_proj.weight', 'layers.6.self_attn.o_proj.weight', 'layers.19.mlp.down_proj.weight', 'layers.7.post_attention_layernorm.weight', 'layers.19.self_attn.qkv_proj.weight', 'layers.28.mlp.gate_up_proj.weight', 'embed_tokens.weight', 'layers.23.self_attn.qkv_proj.weight', 'layers.18.input_layernorm.weight', 'layers.21.mlp.down_proj.weight', 'layers.22.self_attn.qkv_proj.weight', 'layers.25.post_attention_layernorm.weight', 'layers.11.self_attn.qkv_proj.weight', 'layers.15.input_layernorm.weight', 'layers.16.input_layernorm.weight', 'layers.3.post_attention_layernorm.weight', 'layers.13.input_layernorm.weight', 'layers.17.self_attn.qkv_proj.weight', 'layers.24.mlp.down_proj.weight', 'layers.14.post_attention_layernorm.weight', 'layers.24.post_attention_layernorm.weight', 'layers.23.mlp.gate_up_proj.weight', 'layers.27.self_attn.qkv_proj.weight', 'layers.0.self_attn.o_proj.weight', 'layers.0.post_attention_layernorm.weight', 'layers.30.mlp.down_proj.weight', 'layers.13.mlp.gate_up_proj.weight', 'layers.24.mlp.gate_up_proj.weight', 'layers.30.self_attn.o_proj.weight', 'layers.20.mlp.gate_up_proj.weight', 'layers.26.post_attention_layernorm.weight', 'layers.2.post_attention_layernorm.weight', 'layers.5.self_attn.qkv_proj.weight', 'layers.28.post_attention_layernorm.weight', 'layers.10.self_attn.qkv_proj.weight', 'layers.3.mlp.down_proj.weight', 'layers.13.post_attention_layernorm.weight', 'layers.15.post_attention_layernorm.weight', 'layers.21.self_attn.qkv_proj.weight', 'layers.28.self_attn.o_proj.weight', 'layers.5.post_attention_layernorm.weight', 'layers.15.self_attn.o_proj.weight', 'layers.18.self_attn.qkv_proj.weight', 'layers.27.mlp.gate_up_proj.weight', 'layers.2.self_attn.qkv_proj.weight', 'layers.9.mlp.down_proj.weight', 'layers.22.mlp.gate_up_proj.weight', 'layers.25.input_layernorm.weight', 'layers.21.input_layernorm.weight', 'layers.16.mlp.down_proj.weight', 'layers.8.input_layernorm.weight', 'layers.12.post_attention_layernorm.weight', 'layers.20.post_attention_layernorm.weight', 'layers.29.self_attn.o_proj.weight', 'layers.30.self_attn.qkv_proj.weight', 'layers.1.input_layernorm.weight', 'layers.16.mlp.gate_up_proj.weight', 'layers.31.post_attention_layernorm.weight', 'layers.10.input_layernorm.weight', 'layers.26.mlp.down_proj.weight', 'layers.6.mlp.gate_up_proj.weight', 'layers.20.self_attn.qkv_proj.weight', 'layers.31.self_attn.o_proj.weight', 'layers.20.input_layernorm.weight', 'layers.17.input_layernorm.weight', 'layers.6.input_layernorm.weight', 'layers.12.mlp.down_proj.weight', 'layers.2.self_attn.o_proj.weight', 'layers.10.mlp.gate_up_proj.weight', 'layers.19.input_layernorm.weight', 'layers.30.post_attention_layernorm.weight', 'layers.27.mlp.down_proj.weight', 'layers.8.self_attn.o_proj.weight', 'layers.14.self_attn.o_proj.weight', 'layers.1.self_attn.o_proj.weight', 'layers.14.input_layernorm.weight', 'layers.31.input_layernorm.weight', 'layers.29.mlp.gate_up_proj.weight', 'layers.0.mlp.gate_up_proj.weight', 'layers.18.mlp.down_proj.weight', 'layers.17.post_attention_layernorm.weight', 'layers.13.self_attn.qkv_proj.weight', 'layers.3.self_attn.o_proj.weight', 'layers.11.mlp.gate_up_proj.weight', 'layers.2.input_layernorm.weight', 'layers.1.mlp.gate_up_proj.weight', 'layers.27.input_layernorm.weight', 'layers.28.input_layernorm.weight', 'layers.6.mlp.down_proj.weight', 'layers.25.mlp.gate_up_proj.weight', 'layers.5.mlp.down_proj.weight', 'layers.2.mlp.down_proj.weight', 'layers.14.mlp.down_proj.weight', 'layers.22.post_attention_layernorm.weight', 'layers.21.post_attention_layernorm.weight', 'layers.23.post_attention_layernorm.weight', 'layers.10.self_attn.o_proj.weight', 'layers.4.self_attn.o_proj.weight', 'layers.16.post_attention_layernorm.weight', 'layers.24.input_layernorm.weight', 'layers.0.mlp.down_proj.weight', 'layers.17.mlp.gate_up_proj.weight', 'layers.13.self_attn.o_proj.weight', 'layers.18.mlp.gate_up_proj.weight', 'layers.19.post_attention_layernorm.weight', 'layers.0.self_attn.qkv_proj.weight', 'layers.26.mlp.gate_up_proj.weight', 'layers.2.mlp.gate_up_proj.weight', 'layers.4.mlp.down_proj.weight', 'layers.16.self_attn.qkv_proj.weight', 'layers.9.self_attn.qkv_proj.weight', 'layers.19.self_attn.o_proj.weight', 'layers.28.mlp.down_proj.weight', 'layers.1.self_attn.qkv_proj.weight', 'layers.21.self_attn.o_proj.weight', 'layers.23.input_layernorm.weight', 'layers.21.mlp.gate_up_proj.weight', 'layers.22.mlp.down_proj.weight', 'layers.31.mlp.down_proj.weight'}]
hosseins: LlamaModel -> load_weights() [len(params_dict.keys())=194]
hosseins: LlamaModel -> load_weights() [total_loaded_params=15009849344]
hosseins: LlamaModel -> load_weights() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12076081664}]
hosseins: LlamaModel -> load_weights() [cpu_mem_util=4.0]
hosseins: DefaultModelLoader load_model() 1 [195 weights loaded]
hosseins: DefaultModelLoader load_model() 2 [{'bytes_limit': 33550237696, 'peak_bytes_used': 12076081664}]
hosseins: DefaultModelLoader load_model() 2 [4.0]
hosseins: LLMEngine -> _initialize_kv_caches()
hosseins: TPUWorker -> determine_num_available_blocks()
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=1]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 12076081664}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([1, 128256])]
hosseins: TPUWorker -> determine_num_available_blocks() -> get_tpu_info(0) [m={'bytes_limit': 33550237696, 'peak_bytes_used': 11885242368}]
INFO 01-24 21:46:55 tpu_executor.py:81] # TPU blocks: 8728, # CPU blocks: 8192
INFO 01-24 21:46:57 tpu_model_runner.py:286] Compiling the model with different input shapes...
hosseins: TPUModelRunner -> warmup_model() 1 [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885243392}]
hosseins: TPUModelRunner -> warmup_model() 1 [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=1]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885243392}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([1, 128256])]
INFO 01-24 21:46:57 tpu_model_runner.py:301] batch_size: 1, seq_len: 16
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=1]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885243392}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([1, 128256])]
INFO 01-24 21:46:58 tpu_model_runner.py:301] batch_size: 1, seq_len: 32
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=1]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885243392}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([1, 128256])]
INFO 01-24 21:46:59 tpu_model_runner.py:301] batch_size: 1, seq_len: 64
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=1]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885243392}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([1, 128256])]
INFO 01-24 21:46:59 tpu_model_runner.py:301] batch_size: 1, seq_len: 128
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=1]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885243392}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([1, 128256])]
INFO 01-24 21:47:00 tpu_model_runner.py:301] batch_size: 1, seq_len: 256
hosseins: TPUModelRunner -> warmup_model() 2 [cpu_mem_util=4.1]
hosseins: TPUModelRunner -> warmup_model() 2 [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885246976}]
INFO 01-24 21:47:00 tpu_model_runner.py:313] Compilation for prefill done in 2.97 s.
hosseins: TPUModelRunner -> warmup_model() 3 [cpu_mem_util=4.1]
hosseins: TPUModelRunner -> warmup_model() 3 [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885246976}]
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=8]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885246976}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([8, 128256])]
hosseins: TPUModelRunner -> warmup_model() 4 [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885273600}]
hosseins: TPUModelRunner -> warmup_model() 4 [cpu_mem_util=4.1]
INFO 01-24 21:47:01 tpu_model_runner.py:359] batch_size: 8, seq_len: 1
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=16]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885273600}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([16, 128256])]
hosseins: TPUModelRunner -> warmup_model() 4 [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885273600}]
hosseins: TPUModelRunner -> warmup_model() 4 [cpu_mem_util=4.1]
INFO 01-24 21:47:02 tpu_model_runner.py:359] batch_size: 16, seq_len: 1
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=32]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885273600}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([32, 128256])]
hosseins: TPUModelRunner -> warmup_model() 4 [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885273600}]
hosseins: TPUModelRunner -> warmup_model() 4 [cpu_mem_util=4.1]
INFO 01-24 21:47:04 tpu_model_runner.py:359] batch_size: 32, seq_len: 1
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=48]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885273600}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([48, 128256])]
hosseins: TPUModelRunner -> warmup_model() 4 [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885366784}]
hosseins: TPUModelRunner -> warmup_model() 4 [cpu_mem_util=4.1]
INFO 01-24 21:47:05 tpu_model_runner.py:359] batch_size: 48, seq_len: 1
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=64]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885366784}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([64, 128256])]
hosseins: TPUModelRunner -> warmup_model() 4 [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885398528}]
hosseins: TPUModelRunner -> warmup_model() 4 [cpu_mem_util=4.1]
INFO 01-24 21:47:06 tpu_model_runner.py:359] batch_size: 64, seq_len: 1
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=80]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885398528}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([80, 128256])]
hosseins: TPUModelRunner -> warmup_model() 4 [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885398528}]
hosseins: TPUModelRunner -> warmup_model() 4 [cpu_mem_util=4.1]
INFO 01-24 21:47:07 tpu_model_runner.py:359] batch_size: 80, seq_len: 1
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=96]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885398528}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([96, 128256])]
hosseins: TPUModelRunner -> warmup_model() 4 [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885398528}]
hosseins: TPUModelRunner -> warmup_model() 4 [cpu_mem_util=4.1]
INFO 01-24 21:47:09 tpu_model_runner.py:359] batch_size: 96, seq_len: 1
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=112]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885398528}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([112, 128256])]
hosseins: TPUModelRunner -> warmup_model() 4 [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885497856}]
hosseins: TPUModelRunner -> warmup_model() 4 [cpu_mem_util=4.1]
INFO 01-24 21:47:10 tpu_model_runner.py:359] batch_size: 112, seq_len: 1
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=128]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885497856}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([128, 128256])]
hosseins: TPUModelRunner -> warmup_model() 4 [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885527552}]
hosseins: TPUModelRunner -> warmup_model() 4 [cpu_mem_util=4.1]
INFO 01-24 21:47:11 tpu_model_runner.py:359] batch_size: 128, seq_len: 1
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=144]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885527552}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([144, 128256])]
hosseins: TPUModelRunner -> warmup_model() 4 [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885527552}]
hosseins: TPUModelRunner -> warmup_model() 4 [cpu_mem_util=4.1]
INFO 01-24 21:47:12 tpu_model_runner.py:359] batch_size: 144, seq_len: 1
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=160]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885527552}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([160, 128256])]
hosseins: TPUModelRunner -> warmup_model() 4 [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885527552}]
hosseins: TPUModelRunner -> warmup_model() 4 [cpu_mem_util=4.1]
INFO 01-24 21:47:14 tpu_model_runner.py:359] batch_size: 160, seq_len: 1
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=176]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885527552}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([176, 128256])]
hosseins: TPUModelRunner -> warmup_model() 4 [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885613568}]
hosseins: TPUModelRunner -> warmup_model() 4 [cpu_mem_util=4.1]
INFO 01-24 21:47:15 tpu_model_runner.py:359] batch_size: 176, seq_len: 1
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=192]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885613568}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([192, 128256])]
hosseins: TPUModelRunner -> warmup_model() 4 [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885643264}]
hosseins: TPUModelRunner -> warmup_model() 4 [cpu_mem_util=4.1]
INFO 01-24 21:47:16 tpu_model_runner.py:359] batch_size: 192, seq_len: 1
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=208]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885643264}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([208, 128256])]
hosseins: TPUModelRunner -> warmup_model() 4 [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885643264}]
hosseins: TPUModelRunner -> warmup_model() 4 [cpu_mem_util=4.1]
INFO 01-24 21:47:18 tpu_model_runner.py:359] batch_size: 208, seq_len: 1
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=224]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885643264}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([224, 128256])]
hosseins: TPUModelRunner -> warmup_model() 4 [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885643264}]
hosseins: TPUModelRunner -> warmup_model() 4 [cpu_mem_util=4.1]
INFO 01-24 21:47:19 tpu_model_runner.py:359] batch_size: 224, seq_len: 1
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=240]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885643264}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([240, 128256])]
hosseins: TPUModelRunner -> warmup_model() 4 [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885738496}]
hosseins: TPUModelRunner -> warmup_model() 4 [cpu_mem_util=4.1]
INFO 01-24 21:47:20 tpu_model_runner.py:359] batch_size: 240, seq_len: 1
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=256]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885738496}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.1]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([256, 128256])]
hosseins: TPUModelRunner -> warmup_model() 4 [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885768192}]
hosseins: TPUModelRunner -> warmup_model() 4 [cpu_mem_util=4.1]
INFO 01-24 21:47:21 tpu_model_runner.py:359] batch_size: 256, seq_len: 1
INFO 01-24 21:47:21 tpu_model_runner.py:366] Compilation for decode done in 21.54 s.
INFO 01-24 21:47:21 llm_engine.py:448] init engine (profile, create kv cache, warmup model) took 27.26 seconds
hosseins: MQLLMEngineClient -> run_output_handler_loop()
hosseins: MQLLMEngineClient -> run_output_handler_loop()
hosseins: MQLLMEngineClient -> run_output_handler_loop()
hosseins: MQLLMEngineClient -> run_output_handler_loop()
hosseins: MQLLMEngineClient -> run_output_handler_loop()
hosseins: MQLLMEngineClient -> run_output_handler_loop()
hosseins: MQLLMEngineClient -> run_output_handler_loop()
hosseins: MQLLMEngineClient -> run_output_handler_loop()
hosseins: MQLLMEngineClient -> run_output_handler_loop()
hosseins: MQLLMEngineClient -> run_output_handler_loop()
hosseins: MQLLMEngineClient -> run_output_handler_loop()
hosseins: MQLLMEngineClient -> run_output_handler_loop()
hosseins: init_app_state
INFO 01-24 21:47:22 api_server.py:697] Using supplied chat template:
INFO 01-24 21:47:22 api_server.py:697] None
INFO 01-24 21:47:22 launcher.py:19] Available routes are:
INFO 01-24 21:47:22 launcher.py:27] Route: /openapi.json, Methods: GET, HEAD
INFO 01-24 21:47:22 launcher.py:27] Route: /docs, Methods: GET, HEAD
INFO 01-24 21:47:22 launcher.py:27] Route: /docs/oauth2-redirect, Methods: GET, HEAD
INFO 01-24 21:47:22 launcher.py:27] Route: /redoc, Methods: GET, HEAD
INFO 01-24 21:47:22 launcher.py:27] Route: /health, Methods: GET
INFO 01-24 21:47:22 launcher.py:27] Route: /ping, Methods: GET, POST
INFO 01-24 21:47:22 launcher.py:27] Route: /tokenize, Methods: POST
INFO 01-24 21:47:22 launcher.py:27] Route: /detokenize, Methods: POST
INFO 01-24 21:47:22 launcher.py:27] Route: /v1/models, Methods: GET
INFO 01-24 21:47:22 launcher.py:27] Route: /version, Methods: GET
INFO 01-24 21:47:22 launcher.py:27] Route: /v1/chat/completions, Methods: POST
INFO 01-24 21:47:22 launcher.py:27] Route: /v1/completions, Methods: POST
INFO 01-24 21:47:22 launcher.py:27] Route: /v1/embeddings, Methods: POST
INFO 01-24 21:47:22 launcher.py:27] Route: /pooling, Methods: POST
INFO 01-24 21:47:22 launcher.py:27] Route: /score, Methods: POST
INFO 01-24 21:47:22 launcher.py:27] Route: /v1/score, Methods: POST
INFO 01-24 21:47:22 launcher.py:27] Route: /invocations, Methods: POST
INFO:     Started server process [2471667]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
hosseins: create_completion
hosseins: handler=<vllm.entrypoints.openai.serving_completion.OpenAIServingCompletion object at 0x7088c0bbdab0>
hosseins: OpenAIServingCompletion.create_completion
hosseins: 1
hosseins: 2
hosseins: 3
hosseins: 4 - request=CompletionRequest(model='meta-llama/Meta-Llama-3.1-8B', prompt='Humans superpowers are ', best_of=None, echo=False, frequency_penalty=0.0, logit_bias=None, logprobs=None, max_tokens=5, n=1, presence_penalty=0.0, seed=None, stop=[], stream=True, stream_options=None, suffix=None, temperature=0.0, top_p=None, user=None, use_beam_search=False, top_k=None, min_p=None, repetition_penalty=None, length_penalty=1.0, stop_token_ids=[], include_stop_str_in_output=False, ignore_eos=False, min_tokens=0, skip_special_tokens=True, spaces_between_special_tokens=True, truncate_prompt_tokens=None, allowed_token_ids=None, prompt_logprobs=None, add_special_tokens=True, response_format=None, guided_json=None, guided_regex=None, guided_choice=None, guided_grammar=None, guided_decoding_backend=None, guided_whitespace_pattern=None, priority=0, logits_processors=None)
hosseins: 5 - request_prompts=[{'prompt': 'Humans superpowers are ', 'prompt_token_ids': [128000, 95668, 2307, 78404, 527, 220]}]
hosseins: 6 - engine_prompts=[{'prompt_token_ids': [128000, 95668, 2307, 78404, 527, 220]}]
hosseins: 7 - i=0 - engine_prompt={'prompt_token_ids': [128000, 95668, 2307, 78404, 527, 220]}
hosseins: 8 - default_max_tokens=250
hosseins: 9 - sampling_params=SamplingParams(n=1, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0.0, top_p=1.0, top_k=-1, min_p=0.0, seed=None, stop=[], stop_token_ids=[], bad_words=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=5, min_tokens=0, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True, truncate_prompt_tokens=None, guided_decoding=None)
hosseins: 10 - request_id_item='cmpl-f6fc46be13384b9aa838bc259632be00-0'
hosseins: 11 - generator=<async_generator object MQLLMEngineClient._process_request at 0x7088c0b7f540>
hosseins: 12 - num_prompts=1
hosseins: 13 - stream=True
INFO:     127.0.0.1:32822 - "POST /v1/completions HTTP/1.1" 200 OK
hosseins: LLMEngine -> __init__() 2 [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885768192}]
hosseins: LLMEngine -> __init__() 2 [cpu_mem_util=4.1]
hosseins: LLMEngine -> get_tokenizer()
hosseins: LLMEngine -> get_tokenizer_group() group_type=<class 'vllm.transformers_utils.tokenizer_group.base_tokenizer_group.BaseTokenizerGroup'>
hosseins: LLMEngine -> _add_processed_request()
hosseins: LLMEngine -> step()
hosseins: LLMEngine -> _has_remaining_steps()
hosseins: LocalOrDistributedWorkerBase -> execute_model()
hosseins: LocalOrDistributedWorkerBase -> execute_model() [inputs=(ModelInputForTPU(token_ids=tensor([128000,  95668,   2307,  78404,    527,    220,      0,      0,      0,
             0,      0,      0,      0,      0,      0,      0],
       dtype=torch.int32), position_ids=tensor([0, 1, 2, 3, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32), attn_metadata=PallasMetadata(num_prefills=1, num_prefill_tokens=0, num_decode_tokens=0, slot_mapping=tensor([         0,          1,          2,          3,          4,          5,
        1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000,
        1000000000, 1000000000, 1000000000, 1000000000]), multi_modal_placeholder_index_maps=None, block_tables=tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32), context_lens=tensor([0], dtype=torch.int32), effective_query_lens=tensor([6], dtype=torch.int32)), input_lens=tensor([6], dtype=torch.int32), t=tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float32), p=tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float32), num_samples=128, n=[1], seq_groups=[[0]], is_first_multi_step=True, is_last_step=True, virtual_engine=0, async_callback=functools.partial(<function weak_bind.<locals>.weak_bound at 0x78ef8f7025f0>, ctx=<vllm.engine.llm_engine.SchedulerContext object at 0x78ef893035e0>)), WorkerInput(num_seq_groups=1, blocks_to_swap_in=None, blocks_to_swap_out=None, blocks_to_copy=None, virtual_engine=0, num_steps=1), {})]
hosseins: LocalOrDistributedWorkerBase -> execute_model() [self.execute_worker=<bound method TPUWorker.execute_worker of <vllm.worker.multi_step_tpu_worker.MultiStepTPUWorker object at 0x78f0337f3190>>]
hosseins: LocalOrDistributedWorkerBase -> execute_model() [num_steps=1]
hosseins: TPUModelRunner -> execute_model()
hosseins: TPUModelRunner -> execute_model() [is_prompt=True]
hosseins: TPUModelRunner -> execute_model() [model_input.attn_metadata.num_prefills=1]
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=1]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885786624}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([1, 128256])]
hosseins: LLMEngine -> _process_model_outputs()
hosseins: LLMEngine -> _process_model_outputs() -1 - [0]
hosseins: LLMEngine -> _has_remaining_steps()
hosseins: LLMEngine -> _advance_to_next_step()
hosseins: LLMEngine -> step()
hosseins: LLMEngine -> _has_remaining_steps()
hosseins: LocalOrDistributedWorkerBase -> execute_model()
hosseins: LocalOrDistributedWorkerBase -> execute_model() [inputs=(ModelInputForTPU(token_ids=tensor([[16],
        [ 0],
        [ 0],
        [ 0],
        [ 0],
        [ 0],
        [ 0],
        [ 0]], dtype=torch.int32), position_ids=tensor([[6],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]], dtype=torch.int32), attn_metadata=PallasMetadata(num_prefills=0, num_prefill_tokens=0, num_decode_tokens=8, slot_mapping=tensor([[         6],
        [1000000000],
        [1000000000],
        [1000000000],
        [1000000000],
        [1000000000],
        [1000000000],
        [1000000000]]), multi_modal_placeholder_index_maps=None, block_tables=tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32), context_lens=tensor([7, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32), effective_query_lens=None), input_lens=tensor([1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32), t=tensor([0., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float32), p=tensor([1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float32), num_samples=1, n=[1], seq_groups=[[0]], is_first_multi_step=True, is_last_step=False, virtual_engine=0, async_callback=functools.partial(<function weak_bind.<locals>.weak_bound at 0x78ef8f7025f0>, ctx=<vllm.engine.llm_engine.SchedulerContext object at 0x78ef893035e0>)), WorkerInput(num_seq_groups=1, blocks_to_swap_in=None, blocks_to_swap_out=None, blocks_to_copy=None, virtual_engine=0, num_steps=4), {})]
hosseins: LocalOrDistributedWorkerBase -> execute_model() [self.execute_worker=<bound method TPUWorker.execute_worker of <vllm.worker.multi_step_tpu_worker.MultiStepTPUWorker object at 0x78f0337f3190>>]
hosseins: LocalOrDistributedWorkerBase -> execute_model() [num_steps=4]
hosseins: TPUModelRunner -> execute_model()
hosseins: TPUModelRunner -> execute_model() [is_prompt=False]
hosseins: TPUModelRunner -> execute_model() [model_input.attn_metadata.num_prefills=0]
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=8]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885789184}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([8, 128256])]
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=8]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885789184}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([8, 128256])]
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=8]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885789184}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([8, 128256])]
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=8]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 11885789184}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.0]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([8, 128256])]
hosseins: LLMEngine -> _process_model_outputs()
hosseins: LLMEngine -> _process_model_outputs() -1 - [1]
hosseins: LLMEngine -> _process_model_outputs() 0
hosseins: LLMEngine -> _process_model_outputs() 1
hosseins: LLMEngine -> _process_model_outputs() 2
hosseins: LLMEngine -> _process_model_outputs() 3
hosseins: LLMEngine -> _process_model_outputs() 4
hosseins: LLMEngine -> _process_model_outputs() 4 - [0]
hosseins: LLMEngine -> _process_model_outputs() 5 - [0]
hosseins: LLMEngine -> _process_model_outputs() 6 - [0]
hosseins: LLMEngine -> _process_model_outputs() 7 - [0]
hosseins: LLMEngine -> _process_model_outputs() 8
hosseins: LLMEngine -> _process_model_outputs() 10
hosseins: LLMEngine -> _process_model_outputs() 11
hosseins: LLMEngine -> _process_model_outputs() 12 [0]
hosseins: LLMEngine -> _process_model_outputs() 13
hosseins: LLMEngine -> _process_model_outputs() 14
hosseins: LLMEngine -> _process_model_outputs() 15
INFO 01-24 22:51:25 metrics.py:467] Avg prompt throughput: 0.6 tokens/s, Avg generation throughput: 0.1 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.0%, CPU KV cache usage: 0.0%.
hosseins: LLMEngine -> _process_model_outputs() 16
hosseins: LLMEngine -> _has_remaining_steps()
hosseins: LLMEngine -> step()
hosseins: LLMEngine -> _has_remaining_steps()
hosseins: LocalOrDistributedWorkerBase -> execute_model()
hosseins: LocalOrDistributedWorkerBase -> execute_model() [inputs=(ModelInputForTPU(token_ids=tensor([[16],
        [ 0],
        [ 0],
        [ 0],
        [ 0],
        [ 0],
        [ 0],
        [ 0]], dtype=torch.int32), position_ids=tensor([[6],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]], dtype=torch.int32), attn_metadata=PallasMetadata(num_prefills=0, num_prefill_tokens=0, num_decode_tokens=8, slot_mapping=tensor([         9,     139657,     279305,     418953,     558601,     698249,
            837897,     977545, 1000000000, 1000139648, 1000279296, 1000418944,
        1000558592, 1000698240, 1000837888, 1000977536, 1000000000, 1000139648,
        1000279296, 1000418944, 1000558592, 1000698240, 1000837888, 1000977536,
        1000000000, 1000139648, 1000279296, 1000418944, 1000558592, 1000698240,
        1000837888, 1000977536, 1000000000, 1000139648, 1000279296, 1000418944,
        1000558592, 1000698240, 1000837888, 1000977536, 1000000000, 1000139648,
        1000279296, 1000418944, 1000558592, 1000698240, 1000837888, 1000977536,
        1000000000, 1000139648, 1000279296, 1000418944, 1000558592, 1000698240,
        1000837888, 1000977536, 1000000000, 1000139648, 1000279296, 1000418944,
        1000558592, 1000698240, 1000837888, 1000977536], device='xla:0'), multi_modal_placeholder_index_maps=None, block_tables=tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], device='xla:0',
       dtype=torch.int32), context_lens=tensor([10,  3,  3,  3,  3,  3,  3,  3], device='xla:0', dtype=torch.int32), effective_query_lens=None), input_lens=tensor([1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32), t=tensor([0., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float32), p=tensor([1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float32), num_samples=1, n=[1], seq_groups=[[0]], is_first_multi_step=False, is_last_step=False, virtual_engine=0, async_callback=functools.partial(<function weak_bind.<locals>.weak_bound at 0x78ef8f7025f0>, ctx=<vllm.engine.llm_engine.SchedulerContext object at 0x78ef893035e0>)), WorkerInput(num_seq_groups=None, blocks_to_swap_in=None, blocks_to_swap_out=None, blocks_to_copy=None, virtual_engine=0, num_steps=1), {})]
hosseins: LocalOrDistributedWorkerBase -> execute_model() [self.execute_worker=<bound method TPUWorker.execute_worker of <vllm.worker.multi_step_tpu_worker.MultiStepTPUWorker object at 0x78f0337f3190>>]
hosseins: LocalOrDistributedWorkerBase -> execute_model() [num_steps=1]
hosseins: TPUModelRunner -> execute_model()
hosseins: LLMEngine -> _has_remaining_steps()
hosseins: LLMEngine -> step()
hosseins: LLMEngine -> _has_remaining_steps()
hosseins: LocalOrDistributedWorkerBase -> execute_model()
hosseins: LocalOrDistributedWorkerBase -> execute_model() [inputs=(ModelInputForTPU(token_ids=tensor([[16],
        [ 0],
        [ 0],
        [ 0],
        [ 0],
        [ 0],
        [ 0],
        [ 0]], dtype=torch.int32), position_ids=tensor([[6],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]], dtype=torch.int32), attn_metadata=PallasMetadata(num_prefills=0, num_prefill_tokens=0, num_decode_tokens=8, slot_mapping=tensor([         9,     139657,     279305,     418953,     558601,     698249,
            837897,     977545, 1000000000, 1000139648, 1000279296, 1000418944,
        1000558592, 1000698240, 1000837888, 1000977536, 1000000000, 1000139648,
        1000279296, 1000418944, 1000558592, 1000698240, 1000837888, 1000977536,
        1000000000, 1000139648, 1000279296, 1000418944, 1000558592, 1000698240,
        1000837888, 1000977536, 1000000000, 1000139648, 1000279296, 1000418944,
        1000558592, 1000698240, 1000837888, 1000977536, 1000000000, 1000139648,
        1000279296, 1000418944, 1000558592, 1000698240, 1000837888, 1000977536,
        1000000000, 1000139648, 1000279296, 1000418944, 1000558592, 1000698240,
        1000837888, 1000977536, 1000000000, 1000139648, 1000279296, 1000418944,
        1000558592, 1000698240, 1000837888, 1000977536], device='xla:0'), multi_modal_placeholder_index_maps=None, block_tables=tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], device='xla:0',
       dtype=torch.int32), context_lens=tensor([10,  3,  3,  3,  3,  3,  3,  3], device='xla:0', dtype=torch.int32), effective_query_lens=None), input_lens=tensor([1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32), t=tensor([0., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float32), p=tensor([1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float32), num_samples=1, n=[1], seq_groups=[[0]], is_first_multi_step=False, is_last_step=False, virtual_engine=0, async_callback=functools.partial(<function weak_bind.<locals>.weak_bound at 0x78ef8f7025f0>, ctx=<vllm.engine.llm_engine.SchedulerContext object at 0x78ef893035e0>)), WorkerInput(num_seq_groups=None, blocks_to_swap_in=None, blocks_to_swap_out=None, blocks_to_copy=None, virtual_engine=0, num_steps=1), {})]
hosseins: LocalOrDistributedWorkerBase -> execute_model() [self.execute_worker=<bound method TPUWorker.execute_worker of <vllm.worker.multi_step_tpu_worker.MultiStepTPUWorker object at 0x78f0337f3190>>]
hosseins: LocalOrDistributedWorkerBase -> execute_model() [num_steps=1]
hosseins: TPUModelRunner -> execute_model()
hosseins: LLMEngine -> _has_remaining_steps()
hosseins: LLMEngine -> step()
hosseins: LLMEngine -> _has_remaining_steps()
hosseins: LocalOrDistributedWorkerBase -> execute_model()
hosseins: LocalOrDistributedWorkerBase -> execute_model() [inputs=(ModelInputForTPU(token_ids=tensor([[16],
        [ 0],
        [ 0],
        [ 0],
        [ 0],
        [ 0],
        [ 0],
        [ 0]], dtype=torch.int32), position_ids=tensor([[6],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]], dtype=torch.int32), attn_metadata=PallasMetadata(num_prefills=0, num_prefill_tokens=0, num_decode_tokens=8, slot_mapping=tensor([         9,     139657,     279305,     418953,     558601,     698249,
            837897,     977545, 1000000000, 1000139648, 1000279296, 1000418944,
        1000558592, 1000698240, 1000837888, 1000977536, 1000000000, 1000139648,
        1000279296, 1000418944, 1000558592, 1000698240, 1000837888, 1000977536,
        1000000000, 1000139648, 1000279296, 1000418944, 1000558592, 1000698240,
        1000837888, 1000977536, 1000000000, 1000139648, 1000279296, 1000418944,
        1000558592, 1000698240, 1000837888, 1000977536, 1000000000, 1000139648,
        1000279296, 1000418944, 1000558592, 1000698240, 1000837888, 1000977536,
        1000000000, 1000139648, 1000279296, 1000418944, 1000558592, 1000698240,
        1000837888, 1000977536, 1000000000, 1000139648, 1000279296, 1000418944,
        1000558592, 1000698240, 1000837888, 1000977536], device='xla:0'), multi_modal_placeholder_index_maps=None, block_tables=tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], device='xla:0',
       dtype=torch.int32), context_lens=tensor([10,  3,  3,  3,  3,  3,  3,  3], device='xla:0', dtype=torch.int32), effective_query_lens=None), input_lens=tensor([1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32), t=tensor([0., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float32), p=tensor([1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float32), num_samples=1, n=[1], seq_groups=[[0]], is_first_multi_step=False, is_last_step=True, virtual_engine=0, async_callback=functools.partial(<function weak_bind.<locals>.weak_bound at 0x78ef8f7025f0>, ctx=<vllm.engine.llm_engine.SchedulerContext object at 0x78ef893035e0>)), WorkerInput(num_seq_groups=None, blocks_to_swap_in=None, blocks_to_swap_out=None, blocks_to_copy=None, virtual_engine=0, num_steps=1), {})]
hosseins: LocalOrDistributedWorkerBase -> execute_model() [self.execute_worker=<bound method TPUWorker.execute_worker of <vllm.worker.multi_step_tpu_worker.MultiStepTPUWorker object at 0x78f0337f3190>>]
hosseins: LocalOrDistributedWorkerBase -> execute_model() [num_steps=1]
hosseins: TPUModelRunner -> execute_model()
hosseins: LLMEngine -> _process_model_outputs()
hosseins: LLMEngine -> _process_model_outputs() -1 - [1]
hosseins: LLMEngine -> _process_model_outputs() 0
hosseins: LLMEngine -> _process_model_outputs() 1
hosseins: LLMEngine -> _process_model_outputs() 2
hosseins: LLMEngine -> _process_model_outputs() 3
hosseins: LLMEngine -> _process_model_outputs() 4
hosseins: LLMEngine -> _process_model_outputs() 4 - [0]
hosseins: LLMEngine -> _process_model_outputs() 5 - [0]
hosseins: LLMEngine -> _process_model_outputs() 6 - [0]
hosseins: LLMEngine -> _process_model_outputs() 7 - [0]
hosseins: LLMEngine -> _process_model_outputs() 8
hosseins: LLMEngine -> _process_model_outputs() 10
hosseins: LLMEngine -> _process_model_outputs() 11
hosseins: LLMEngine -> _process_model_outputs() 12 [0]
hosseins: LLMEngine -> _process_model_outputs()
hosseins: LLMEngine -> _process_model_outputs() -1 - [1]
hosseins: LLMEngine -> _process_model_outputs() 0
hosseins: LLMEngine -> _process_model_outputs() 1
hosseins: LLMEngine -> _process_model_outputs() 2
hosseins: LLMEngine -> _process_model_outputs() 3
hosseins: LLMEngine -> _process_model_outputs() 4
hosseins: LLMEngine -> _process_model_outputs() 4 - [0]
hosseins: LLMEngine -> _process_model_outputs() 5 - [0]
hosseins: LLMEngine -> _process_model_outputs() 6 - [0]
hosseins: LLMEngine -> _process_model_outputs() 7 - [0]
hosseins: LLMEngine -> _process_model_outputs() 8
hosseins: LLMEngine -> _process_model_outputs() 10
hosseins: LLMEngine -> _process_model_outputs() 11
hosseins: LLMEngine -> _process_model_outputs() 12 [0]
hosseins: LLMEngine -> _process_model_outputs()
hosseins: LLMEngine -> _process_model_outputs() -1 - [1]
hosseins: LLMEngine -> _process_model_outputs() 0
hosseins: LLMEngine -> _process_model_outputs() 1
hosseins: LLMEngine -> _process_model_outputs() 2
hosseins: LLMEngine -> _process_model_outputs() 3
hosseins: LLMEngine -> _process_model_outputs() 4
hosseins: LLMEngine -> _process_model_outputs() 4 - [0]
hosseins: LLMEngine -> _process_model_outputs() 5 - [0]
hosseins: LLMEngine -> _process_model_outputs() 6 - [0]
hosseins: LLMEngine -> _process_model_outputs() 7 - [0]
hosseins: LLMEngine -> _process_model_outputs() 8
hosseins: LLMEngine -> _process_model_outputs() 10
hosseins: LLMEngine -> _process_model_outputs() 11
hosseins: LLMEngine -> _process_model_outputs() 12 [0]
hosseins: LLMEngine -> _has_remaining_steps()
hosseins: LLMEngine -> _advance_to_next_step()
hosseins: LLMEngine -> step()
hosseins: LLMEngine -> _has_remaining_steps()
hosseins: LocalOrDistributedWorkerBase -> execute_model()
hosseins: LocalOrDistributedWorkerBase -> execute_model() [inputs=(ModelInputForTPU(token_ids=tensor([[311],
        [  0],
        [  0],
        [  0],
        [  0],
        [  0],
        [  0],
        [  0]], dtype=torch.int32), position_ids=tensor([[10],
        [ 0],
        [ 0],
        [ 0],
        [ 0],
        [ 0],
        [ 0],
        [ 0]], dtype=torch.int32), attn_metadata=PallasMetadata(num_prefills=0, num_prefill_tokens=0, num_decode_tokens=8, slot_mapping=tensor([[        10],
        [1000000000],
        [1000000000],
        [1000000000],
        [1000000000],
        [1000000000],
        [1000000000],
        [1000000000]]), multi_modal_placeholder_index_maps=None, block_tables=tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32), context_lens=tensor([11,  0,  0,  0,  0,  0,  0,  0], dtype=torch.int32), effective_query_lens=None), input_lens=tensor([1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32), t=tensor([0., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float32), p=tensor([1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float32), num_samples=1, n=[1], seq_groups=[[0]], is_first_multi_step=True, is_last_step=False, virtual_engine=0, async_callback=functools.partial(<function weak_bind.<locals>.weak_bound at 0x78ef8f7025f0>, ctx=<vllm.engine.llm_engine.SchedulerContext object at 0x78ef893035e0>)), WorkerInput(num_seq_groups=1, blocks_to_swap_in=None, blocks_to_swap_out=None, blocks_to_copy=None, virtual_engine=0, num_steps=4), {})]
hosseins: LocalOrDistributedWorkerBase -> execute_model() [self.execute_worker=<bound method TPUWorker.execute_worker of <vllm.worker.multi_step_tpu_worker.MultiStepTPUWorker object at 0x78f0337f3190>>]
hosseins: LocalOrDistributedWorkerBase -> execute_model() [num_steps=4]
hosseins: TPUModelRunner -> execute_model()
hosseins: TPUModelRunner -> execute_model() [is_prompt=False]
hosseins: TPUModelRunner -> execute_model() [model_input.attn_metadata.num_prefills=0]
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=8]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 33172285440}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.8]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([8, 128256])]
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=8]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 33172285440}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.8]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([8, 128256])]
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=8]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 33172285440}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.8]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([8, 128256])]
hosseins: LlamaForCausalLM -> forward
hosseins: LlamaModel -> get_input_embeddings : [len(input_ids)=8]
hosseins: LlamaModel -> get_input_embeddings() [tpu_activities={'bytes_limit': 33550237696, 'peak_bytes_used': 33490717184}]
hosseins: LlamaModel -> get_input_embeddings() [cpu_mem_util=4.8]
hosseins: LlamaForCausalLM -> compute_logits
hosseins: LlamaForCausalLM -> compute_logits() [logits.shape=torch.Size([8, 128256])]
hosseins: LLMEngine -> _process_model_outputs()
hosseins: LLMEngine -> _process_model_outputs() -1 - [1]
hosseins: LLMEngine -> _process_model_outputs() 0
hosseins: LLMEngine -> _process_model_outputs() 1
hosseins: LLMEngine -> _process_model_outputs() 2
hosseins: LLMEngine -> _process_model_outputs() 3
hosseins: LLMEngine -> _process_model_outputs() 4
hosseins: LLMEngine -> _process_model_outputs() 4 - [0]
hosseins: LLMEngine -> _process_model_outputs() 5 - [0]
hosseins: LLMEngine -> _process_model_outputs() 6 - [0]
hosseins: LLMEngine -> _process_model_outputs() 7 - [0]
hosseins: LLMEngine -> _process_model_outputs() 8
hosseins: LLMEngine -> _process_model_outputs() 9 [0]
hosseins: LLMEngine -> _process_model_outputs() 10
hosseins: LLMEngine -> _process_model_outputs() 11
hosseins: LLMEngine -> _process_model_outputs() 13
hosseins: LLMEngine -> _process_model_outputs() 14
hosseins: LLMEngine -> _process_model_outputs() 15
INFO 01-24 22:52:16 metrics.py:467] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 0.1 tokens/s, Running: 0 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.0%, CPU KV cache usage: 0.0%.
hosseins - 13
hosseins - 14 prompt_idx=0
hosseins - 15 res=RequestOutput(request_id=cmpl-f6fc46be13384b9aa838bc259632be00-0, prompt=None, prompt_token_ids=[128000, 95668, 2307, 78404, 527, 220], encoder_prompt=None, encoder_prompt_token_ids=None, prompt_logprobs=None, outputs=[CompletionOutput(index=0, text='1', token_ids=[16], cumulative_logprob=None, logprobs=None, finish_reason=None, stop_reason=None)], finished=False, metrics=RequestMetrics(arrival_time=1737759081.2059116, last_token_time=1737759085.5630586, first_scheduled_time=1737759081.2069921, first_token_time=1737759085.5630586, time_in_queue=0.0010805130004882812, finished_time=None, scheduler_time=0.0008406690030824393, model_forward_time=None, model_execute_time=None), lora_request=None, num_cached_tokens=0, multi_modal_placeholders={})
hosseins - 16.0 i=0
hosseins - 16 output=CompletionOutput(index=0, text='1', token_ids=[16], cumulative_logprob=None, logprobs=None, finish_reason=None, stop_reason=None)
hosseins - 17 request.echo=False
hosseins - 18 request.logprobs=None
hosseins - 21 previous_text_lens[i]=1
hosseins - 22 previous_num_tokens[i]=1
hosseins - 23 previous_num_tokens[i]=1
hosseins - 24 chunk=CompletionStreamResponse(id='cmpl-f6fc46be13384b9aa838bc259632be00', object='text_completion', created=1737759081, model='meta-llama/Meta-Llama-3.1-8B', choices=[CompletionResponseStreamChoice(index=0, text='1', logprobs=None, finish_reason=None, stop_reason=None)], usage=None)
hosseins - 25 include_continuous_usage=False
hosseins - 28 response_json='{"id":"cmpl-f6fc46be13384b9aa838bc259632be00","object":"text_completion","created":1737759081,"model":"meta-llama/Meta-Llama-3.1-8B","choices":[{"index":0,"text":"1","logprobs":null,"finish_reason":null,"stop_reason":null}],"usage":null}'
hosseins - 14 prompt_idx=0
hosseins - 15 res=RequestOutput(request_id=cmpl-f6fc46be13384b9aa838bc259632be00-0, prompt=None, prompt_token_ids=None, encoder_prompt=None, encoder_prompt_token_ids=None, prompt_logprobs=None, outputs=[CompletionOutput(index=0, text=')', token_ids=[8], cumulative_logprob=None, logprobs=None, finish_reason=None, stop_reason=None)], finished=False, metrics=RequestMetrics(arrival_time=1737759081.2059116, last_token_time=1737759097.8882432, first_scheduled_time=1737759081.2069921, first_token_time=1737759085.5630586, time_in_queue=0.0010805130004882812, finished_time=None, scheduler_time=0.0008406690030824393, model_forward_time=None, model_execute_time=None), lora_request=None, num_cached_tokens=0, multi_modal_placeholders={})
hosseins - 16.0 i=0
hosseins - 16 output=CompletionOutput(index=0, text=')', token_ids=[8], cumulative_logprob=None, logprobs=None, finish_reason=None, stop_reason=None)
hosseins - 17 request.echo=False
hosseins - 18 request.logprobs=None
hosseins - 21 previous_text_lens[i]=2
hosseins - 22 previous_num_tokens[i]=2
hosseins - 23 previous_num_tokens[i]=2
hosseins - 24 chunk=CompletionStreamResponse(id='cmpl-f6fc46be13384b9aa838bc259632be00', object='text_completion', created=1737759081, model='meta-llama/Meta-Llama-3.1-8B', choices=[CompletionResponseStreamChoice(index=0, text=')', logprobs=None, finish_reason=None, stop_reason=None)], usage=None)
hosseins - 25 include_continuous_usage=False
hosseins - 28 response_json='{"id":"cmpl-f6fc46be13384b9aa838bc259632be00","object":"text_completion","created":1737759081,"model":"meta-llama/Meta-Llama-3.1-8B","choices":[{"index":0,"text":")","logprobs":null,"finish_reason":null,"stop_reason":null}],"usage":null}'
hosseins - 14 prompt_idx=0
hosseins - 15 res=RequestOutput(request_id=cmpl-f6fc46be13384b9aa838bc259632be00-0, prompt=None, prompt_token_ids=None, encoder_prompt=None, encoder_prompt_token_ids=None, prompt_logprobs=None, outputs=[CompletionOutput(index=0, text=' the', token_ids=[279], cumulative_logprob=None, logprobs=None, finish_reason=None, stop_reason=None)], finished=False, metrics=RequestMetrics(arrival_time=1737759081.2059116, last_token_time=1737759109.5458364, first_scheduled_time=1737759081.2069921, first_token_time=1737759085.5630586, time_in_queue=0.0010805130004882812, finished_time=None, scheduler_time=0.0008406690030824393, model_forward_time=None, model_execute_time=None), lora_request=None, num_cached_tokens=0, multi_modal_placeholders={})
hosseins - 16.0 i=0
hosseins - 16 output=CompletionOutput(index=0, text=' the', token_ids=[279], cumulative_logprob=None, logprobs=None, finish_reason=None, stop_reason=None)
hosseins - 17 request.echo=False
hosseins - 18 request.logprobs=None
hosseins - 21 previous_text_lens[i]=6
hosseins - 22 previous_num_tokens[i]=3
hosseins - 23 previous_num_tokens[i]=3
hosseins - 24 chunk=CompletionStreamResponse(id='cmpl-f6fc46be13384b9aa838bc259632be00', object='text_completion', created=1737759081, model='meta-llama/Meta-Llama-3.1-8B', choices=[CompletionResponseStreamChoice(index=0, text=' the', logprobs=None, finish_reason=None, stop_reason=None)], usage=None)
hosseins - 25 include_continuous_usage=False
hosseins - 28 response_json='{"id":"cmpl-f6fc46be13384b9aa838bc259632be00","object":"text_completion","created":1737759081,"model":"meta-llama/Meta-Llama-3.1-8B","choices":[{"index":0,"text":" the","logprobs":null,"finish_reason":null,"stop_reason":null}],"usage":null}'
hosseins - 14 prompt_idx=0
hosseins - 15 res=RequestOutput(request_id=cmpl-f6fc46be13384b9aa838bc259632be00-0, prompt=None, prompt_token_ids=None, encoder_prompt=None, encoder_prompt_token_ids=None, prompt_logprobs=None, outputs=[CompletionOutput(index=0, text=' ability', token_ids=[5845], cumulative_logprob=None, logprobs=None, finish_reason=None, stop_reason=None)], finished=False, metrics=RequestMetrics(arrival_time=1737759081.2059116, last_token_time=1737759121.2295866, first_scheduled_time=1737759081.2069921, first_token_time=1737759085.5630586, time_in_queue=0.0010805130004882812, finished_time=None, scheduler_time=0.0008406690030824393, model_forward_time=None, model_execute_time=None), lora_request=None, num_cached_tokens=0, multi_modal_placeholders={})
hosseins - 16.0 i=0
hosseins - 16 output=CompletionOutput(index=0, text=' ability', token_ids=[5845], cumulative_logprob=None, logprobs=None, finish_reason=None, stop_reason=None)
hosseins - 17 request.echo=False
hosseins - 18 request.logprobs=None
hosseins - 21 previous_text_lens[i]=14
hosseins - 22 previous_num_tokens[i]=4
hosseins - 23 previous_num_tokens[i]=4
hosseins - 24 chunk=CompletionStreamResponse(id='cmpl-f6fc46be13384b9aa838bc259632be00', object='text_completion', created=1737759081, model='meta-llama/Meta-Llama-3.1-8B', choices=[CompletionResponseStreamChoice(index=0, text=' ability', logprobs=None, finish_reason=None, stop_reason=None)], usage=None)
hosseins - 25 include_continuous_usage=False
hosseins - 28 response_json='{"id":"cmpl-f6fc46be13384b9aa838bc259632be00","object":"text_completion","created":1737759081,"model":"meta-llama/Meta-Llama-3.1-8B","choices":[{"index":0,"text":" ability","logprobs":null,"finish_reason":null,"stop_reason":null}],"usage":null}'
hosseins - 14 prompt_idx=0
hosseins - 15 res=RequestOutput(request_id=cmpl-f6fc46be13384b9aa838bc259632be00-0, prompt=None, prompt_token_ids=None, encoder_prompt=None, encoder_prompt_token_ids=None, prompt_logprobs=None, outputs=[CompletionOutput(index=0, text=' to', token_ids=[311], cumulative_logprob=None, logprobs=None, finish_reason=length, stop_reason=None)], finished=True, metrics=RequestMetrics(arrival_time=1737759081.2059116, last_token_time=1737759136.7942712, first_scheduled_time=1737759081.2069921, first_token_time=1737759085.5630586, time_in_queue=0.0010805130004882812, finished_time=1737759136.794553, scheduler_time=0.0014156880060909316, model_forward_time=None, model_execute_time=None), lora_request=None, num_cached_tokens=0, multi_modal_placeholders={})
hosseins - 16.0 i=0
hosseins - 16 output=CompletionOutput(index=0, text=' to', token_ids=[311], cumulative_logprob=None, logprobs=None, finish_reason=length, stop_reason=None)
hosseins - 17 request.echo=False
hosseins - 18 request.logprobs=None
hosseins - 21 previous_text_lens[i]=17
hosseins - 22 previous_num_tokens[i]=5
hosseins - 23 previous_num_tokens[i]=5
hosseins: LLMEngine -> _process_model_outputs() 16
hosseins: LLMEngine -> _has_remaining_steps()
INFO 01-24 22:52:26 metrics.py:467] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 0.0 tokens/s, Running: 0 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.0%, CPU KV cache usage: 0.0%.
